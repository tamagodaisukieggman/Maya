//===============================================
//
// ノード表示/非表示ツール
//
//===============================================

global proc mtk_showHideNodeTool()
{
    //プリファレンスに値が無ければデフォルト値を設定
    if (`optionVar -ex "ov_showAbove_mtk_showHideNodeTool"` == 0)
    {
        optionVar -iv "ov_soloSelect_mtk_showHideNodeTool" 0;
        optionVar -iv "ov_showAbove_mtk_showHideNodeTool" 0;
        optionVar -iv "ov_showBelow_mtk_showHideNodeTool" 0;
        optionVar -iv "ov_selectNode_mtk_showHideNodeTool" 0;
    }

/*
    //すでにウィンドウがあれば終了
    if (`window -exists uWnd_mtk_showHideNodeTool`)
    {
        deleteUI uWnd_mtk_showHideNodeTool;
    }

    if(`windowPref -exists uWnd_mtk_showHideNodeTool`)
    {
        windowPref -e -wh 100 100 uWnd_mtk_showHideNodeTool;
    }

    window
        -title "Show/Hide Node"
        -resizeToFitChildren on
        -sizeable on
        -maximizeButton off
        -toolbox on
        -menuBar on
        -w 10
        -h 10
        uWnd_mtk_showHideNodeTool;
*/

    menuBarLayout;
        // メニュー
        menu -label "表示";
            menuItem
                -label "更新"
                -c "mtk_showHideNodeTool_createUI"
                ;

        menu -label "オプション";
            menuItem
                -label "ソロ選択モード"
                -cb `optionVar -q "ov_soloSelect_mtk_showHideNodeTool"`
                -c "mtk_showHideNodeTool_toggleOption(\"ov_soloSelect_mtk_showHideNodeTool\")"
                ;
            menuItem -d true;
            menuItem
                -label "ノード表示時に非表示の親ノードも表示"
                -cb `optionVar -q "ov_showAbove_mtk_showHideNodeTool"`
                -c "mtk_showHideNodeTool_toggleOption(\"ov_showAbove_mtk_showHideNodeTool\")"
                ;
            menuItem
                -label "ノード表示時に非表示の子ノードも表示"
                -cb `optionVar -q "ov_showBelow_mtk_showHideNodeTool"`
                -c "mtk_showHideNodeTool_toggleOption(\"ov_showBelow_mtk_showHideNodeTool\")"
                ;
            menuItem -d true;
            menuItem
                -label "ノード表示と同時に選択"
                -cb `optionVar -q "ov_selectNode_mtk_showHideNodeTool"`
                -c "mtk_showHideNodeTool_toggleOption(\"ov_selectNode_mtk_showHideNodeTool\")"
                ;

        string $helpCmd = "python(\"import webbrowser\\nwebbrowser.open('https://wisdom.cygames.jp/pages/viewpage.action?pageId=140465897')\")";

        menu -label "ヘルプ" ;
            menuItem
                -label "Show/Hide Node Tool のヘルプ"
                -enable on
                -c $helpCmd
                ;

        mtk_showHideNodeTool_createUI;

    //showWindow;

    // スクリプトジョブ設定（シーンオープン時）
    scriptJob -event "SceneOpened" "mtk_showHideNodeTool_createUI" -parent uWsc_mtk_showHideNodeTool;
}

///////////////////////////////////////
// UI 作成
///////////////////////////////////////
global proc mtk_showHideNodeTool_createUI()
{
    // mdl ノードリスト
    global string $MDL_LIST_MTK_SHOWHIDENODE[];
    clear $MDL_LIST_MTK_SHOWHIDENODE;

    // model ノードリスト
    global string $MODEL_LIST_MTK_SHOWHIDENODE[];
    clear $MODEL_LIST_MTK_SHOWHIDENODE;

    // collision ノードリスト
    global string $COLLISION_LIST_MTK_SHOWHIDENODE[];
    clear $COLLISION_LIST_MTK_SHOWHIDENODE;

    // jnt_0000_skl_root ノードリスト
    global string $ROOT_JNT_LIST_MTK_SHOWHIDENODE[];
    clear $ROOT_JNT_LIST_MTK_SHOWHIDENODE;

    // lod1 ノードリスト
    global string $LOD1_LIST_MTK_SHOWHIDENODE[];
    clear $LOD1_LIST_MTK_SHOWHIDENODE;

    // lod2 ノードリスト
    global string $LOD2_LIST_MTK_SHOWHIDENODE[];
    clear $LOD2_LIST_MTK_SHOWHIDENODE;

    // lod3 ノードリスト
    global string $LOD3_LIST_MTK_SHOWHIDENODE[];
    clear $LOD3_LIST_MTK_SHOWHIDENODE;

    // lod4 ノードリスト
    global string $LOD4_LIST_MTK_SHOWHIDENODE[];
    clear $LOD4_LIST_MTK_SHOWHIDENODE;

    // lod5 ノードリスト
    global string $LOD5_LIST_MTK_SHOWHIDENODE[];
    clear $LOD5_LIST_MTK_SHOWHIDENODE;

    // lod6 ノードリスト
    global string $LOD6_LIST_MTK_SHOWHIDENODE[];
    clear $LOD6_LIST_MTK_SHOWHIDENODE;

    // lod7 ノードリスト
    global string $LOD7_LIST_MTK_SHOWHIDENODE[];
    clear $LOD7_LIST_MTK_SHOWHIDENODE;

    // ノードリスト（mdlごと）
    global string $NODE_LIST_BY_MDL_MTK_SHOWHIDENODE[];
    clear $NODE_LIST_BY_MDL_MTK_SHOWHIDENODE;

    // すでにメインのレイアウトがあれば削除
    if(`frameLayout -q -exists uFl_mtk_showHideNodeTool`)
    {
        deleteUI uFl_mtk_showHideNodeTool;
    }

    // メインのレイアウト作成
    frameLayout
        -lv 0
        -mw 4
        -mh 4
        -p uWsc_mtk_showHideNodeTool
        uFl_mtk_showHideNodeTool;

    // シーンにあるmdl_ ノードを取得
    $MDL_LIST_MTK_SHOWHIDENODE = `mtk_showHideNodeTool_getMdlNodes`;

    // mdl_ ノードが無ければ終了
    if(`size($MDL_LIST_MTK_SHOWHIDENODE)` == 0)
    {
        return;
    }

    // ノードタイプのリスト
    string $NODE_TYPE_LIST[] = {
            "model",
            "collision",
            "jnt_0000_skl_root",
            "lod1",
            "lod2",
            "lod3",
            "lod4",
            "lod5",
            "lod6",
            "lod7"
        };

    // mdl アイコンのパス
    string $MDL_ICON_PATH = "Z:/cyllista/tools/icons/asset/file_model.png";

    // 各ノードのアイコンパス
    string $NODE_ICON_PATH_LIST[] = {
            "Z:/cyllista/tools/icons/asset/file_mesh.png",
            "Z:/cyllista/tools/icons/asset/file_physics.png",
            "joint.svg",
            "Z:/mtk/tools/maya/2022/modules/mtk/icons/mtk_showHideNodeTool/node_lod1.png",
            "Z:/mtk/tools/maya/2022/modules/mtk/icons/mtk_showHideNodeTool/node_lod2.png",
            "Z:/mtk/tools/maya/2022/modules/mtk/icons/mtk_showHideNodeTool/node_lod3.png",
            "Z:/mtk/tools/maya/2022/modules/mtk/icons/mtk_showHideNodeTool/node_lod4.png",
            "Z:/mtk/tools/maya/2022/modules/mtk/icons/mtk_showHideNodeTool/node_lod5.png",
            "Z:/mtk/tools/maya/2022/modules/mtk/icons/mtk_showHideNodeTool/node_lod6.png",
            "Z:/mtk/tools/maya/2022/modules/mtk/icons/mtk_showHideNodeTool/node_lod7.png"
        };

    // 全てのmdl_ ノードの子ノードを取得
    string $allChildNodes[] = `listRelatives -c -type "transform" $MDL_LIST_MTK_SHOWHIDENODE`;

    // 重複を削除
    $allChildNodes = stringArrayRemoveDuplicates($allChildNodes);

    $nc = `size($NODE_TYPE_LIST)` + 1;

    // ノードアイコンのサイズ
    int $w = 24;
    int $h = 24;

    // ノードアイコン、チェックボックスカラムの幅
    int $cw = 28;

    // 存在するノードタイプ
    string $existedNodeTypes[];

    // ノードアイコン行作成
    rowColumnLayout
        -nc 2
        //-columnSpacing 2 10
        -rowSpacing 1 4
        ;

        text -l "";

        // ノードアイコン レイアウト
        string $rl = `rowLayout -nc $nc -columnWidth 1 ($cw + 16)`;


            // mdl ノードアイコン
            iconTextButton
                -i $MDL_ICON_PATH
                -ann "mdl"
                -w $w
                -h $h
                -c "mtk_showHideNodeTool_showHideByNodeType(\"mdl\", \"toggle\", 0)";
                ;

            // 右クリックメニュー
            popupMenu;
                menuItem
                    -l "表示"
                    -image "Z:/mtk/tools/maya/2022/modules/mtk/icons/mtk_showHideNodeTool/show.png"
                    -c "mtk_showHideNodeTool_showHideByNodeType(\"mdl\", \"show\", 0)";

                menuItem
                    -l "非表示"
                    -image "Z:/mtk/tools/maya/2022/modules/mtk/icons/mtk_showHideNodeTool/hide.png"
                    -c "mtk_showHideNodeTool_showHideByNodeType(\"mdl\", \"hide\", 0)";

                menuItem
                    -l "表示 / 非表示 トグル"
                    -c "mtk_showHideNodeTool_showHideByNodeType(\"mdl\", \"toggle\", 0)";

                menuItem -d true;

                menuItem
                    -l "テンプレート化"
                    -image "Z:/mtk/tools/maya/2022/modules/mtk/icons/mtk_showHideNodeTool/templete.png"
                    -c "mtk_showHideNodeTool_templeteByNodeType(\"mdl\", 1)";

                menuItem
                    -l "テンプレート化解除"
                    -c "mtk_showHideNodeTool_templeteByNodeType(\"mdl\", 0)";

                menuItem -d true;

                menuItem
                    -l "mdl ノードを選択"
                    -c "mtk_showHideNodeTool_selectByNodeType(\"mdl\")";

            int $count = 1;
            int $index;

            string $nodeType;

            // ノードアイコン作成
            for($nodeType in $NODE_TYPE_LIST)
            {
                if(stringArrayContains($nodeType, $allChildNodes))
                {
                    iconTextButton
                        -i $NODE_ICON_PATH_LIST[$index]
                        -ann $nodeType
                        -w $w
                        -h $h
                        -c ("mtk_showHideNodeTool_showHideByNodeType(\"" + $nodeType +"\", \"toggle\", 0)")
                        ;

                    // 右クリックメニュー
                    popupMenu;
                        menuItem
                            -l ($nodeType + " ノードのみ表示")
                            -c ("mtk_showHideNodeTool_showHideByNodeType(\"" + $nodeType +"\", \"show\", 3)");
                            ;

                        menuItem -d true;

                        menuItem
                            -l "表示"
                            -image "Z:/mtk/tools/maya/2022/modules/mtk/icons/mtk_showHideNodeTool/show.png"
                            -c ("mtk_showHideNodeTool_showHideByNodeType(\"" + $nodeType +"\", \"showByType\", 0)");

                        menuItem
                            -l "非表示"
                            -image "Z:/mtk/tools/maya/2022/modules/mtk/icons/mtk_showHideNodeTool/hide.png"
                            -c ("mtk_showHideNodeTool_showHideByNodeType(\"" + $nodeType +"\", \"hide\", 0)");

                        menuItem
                            -l "表示 / 非表示 トグル"
                            -c ("mtk_showHideNodeTool_showHideByNodeType(\"" + $nodeType +"\", \"toggle\", 0)");

                        menuItem -d true;

                        menuItem
                            -l "テンプレート化"
                            -image "Z:/mtk/tools/maya/2022/modules/mtk/icons/mtk_showHideNodeTool/templete.png"
                            -c ("mtk_showHideNodeTool_templeteByNodeType(\"" + $nodeType +"\", 1)");

                        menuItem
                            -l "テンプレート化解除"
                            -c ("mtk_showHideNodeTool_templeteByNodeType(\"" + $nodeType +"\", 0)");

                        menuItem -d true;

                        menuItem
                            -l ($nodeType + " ノードを選択")
                            -c ("mtk_showHideNodeTool_selectByNodeType(\"" + $nodeType + "\")");

                    rowLayout -e
                        -columnWidth ($count + 1) $cw
                        $rl;

                    $existedNodeTypes[`size($existedNodeTypes)`] = $nodeType;

                    $count += 1;
                }

                $index += 1;
            }

            setParent ..;

    string $mdlNode;

    int $mdlCount;

    // mdl 行 作成
    for($mdlNode in $MDL_LIST_MTK_SHOWHIDENODE)
    {
        // mdl の子ノード取得（ロングネーム、ショートネーム）
        string $targetNodeLongNames[] = `listRelatives -c -fullPath -type "transform" $mdlNode`;
        string $targetNodeShortNames[] = `listRelatives -c -type "transform" $mdlNode`;

        text -l ($mdlNode + " : ");

        // チェックボックス行 作成
        $rl = `rowLayout -nc ($nc+2) -columnWidth 1 ($cw + 16)`;

            // mdl チェックボックスレイアウト作成
            rowLayout -nc 3;
                // スペース
                text -l " ";

                // mdl チェックボックス
                string $onc = "mtk_showHideNodeTool_showHideNode({\"" + $mdlNode + "\"}, \"show\", 0)";
                string $ofc = "mtk_showHideNodeTool_showHideNode({\"" + $mdlNode + "\"}, \"hide\", 0)";
                string $cb = `checkBox -l "" -w $w -onc $onc -ofc $ofc`;

                popupMenu;
                    menuItem
                        -l "このmdl ノードのみ表示"
                        -c ("mtk_showHideNodeTool_showHideNode({\"" + $mdlNode + "\"}, \"show\", 2)");
                        ;

                    menuItem -d true;

                    menuItem
                        -l "テンプレート化"
                        -image "Z:/mtk/tools/maya/2022/modules/mtk/icons/mtk_showHideNodeTool/templete.png"
                        -c ("toggle -state true -template " + $mdlNode);
                        ;
                    menuItem
                        -l "テンプレート化解除"
                        -c ("toggle -state false -template " + $mdlNode);
                        ;

                    menuItem -d true;

                    menuItem
                        -l "ノードを選択"
                        -c ("select -r " + $mdlNode)
                        ;

                // mdl チェックボックスをvisibility に接続
                connectControl -preventContextualMenu true $cb ($mdlNode + ".visibility");

                separator -horizontal false -h 16;

            setParent ..;

            $count = 1;

            string $existedNodeType;

            for($existedNodeType in $existedNodeTypes)
            {
                int $index = stringArrayFind($existedNodeType, 0, $targetNodeShortNames);

                if($index != -1)
                {
                    rowLayout -nc 2;

                        // スペース
                        text -l " ";

                        // チェックボックス作成
                        string $onc = "mtk_showHideNodeTool_showHideNode({\"" + $targetNodeLongNames[$index] + "\"}, \"show\", 0)";
                        string $ofc = "mtk_showHideNodeTool_showHideNode({\"" + $targetNodeLongNames[$index] + "\"}, \"hide\", 0)";
                        $cb = `checkBox -l "" -w $w -onc $onc -ofc $ofc`;

                        popupMenu;
                            menuItem
                                -l "このノードのみ表示"
                                -c ("mtk_showHideNodeTool_showHideNode({\"" + $targetNodeLongNames[$index] + "\"}, \"show\", 2)");
                                ;

                            menuItem -d true;

                            menuItem
                                -l "テンプレート化"
                                -image "Z:/mtk/tools/maya/2022/modules/mtk/icons/mtk_showHideNodeTool/templete.png"
                                -c ("toggle -state true -template " + $targetNodeLongNames[$index]);
                                ;
                            menuItem
                                -l "テンプレート化解除"
                                -c ("toggle -state false -template " + $targetNodeLongNames[$index]);
                                ;

                            menuItem -d true;

                            menuItem
                                -l "ノードを選択"
                                -c ("select -r " + $targetNodeLongNames[$index])
                                ;

                        // チェックボックスをvisibility に接続
                        connectControl -preventContextualMenu true $cb ($targetNodeLongNames[$index] + ".visibility");

                        if($existedNodeType == "model")
                        {
                            $MODEL_LIST_MTK_SHOWHIDENODE[`size($MODEL_LIST_MTK_SHOWHIDENODE)`] = $targetNodeLongNames[$index];
                        }
                        else if($existedNodeType == "collision")
                        {
                            $COLLISION_LIST_MTK_SHOWHIDENODE[`size($COLLISION_LIST_MTK_SHOWHIDENODE)`] = $targetNodeLongNames[$index];
                        }
                        else if($existedNodeType == "jnt_0000_skl_root")
                        {
                            $ROOT_JNT_LIST_MTK_SHOWHIDENODE[`size($ROOT_JNT_LIST_MTK_SHOWHIDENODE)`] = $targetNodeLongNames[$index];
                        }
                        else if($existedNodeType == "lod1")
                        {
                            $LOD1_LIST_MTK_SHOWHIDENODE[`size($LOD1_LIST_MTK_SHOWHIDENODE)`] = $targetNodeLongNames[$index];
                        }
                        else if($existedNodeType == "lod2")
                        {
                            $LOD2_LIST_MTK_SHOWHIDENODE[`size($LOD2_LIST_MTK_SHOWHIDENODE)`] = $targetNodeLongNames[$index];
                        }
                        else if($existedNodeType == "lod3")
                        {
                            $LOD3_LIST_MTK_SHOWHIDENODE[`size($LOD3_LIST_MTK_SHOWHIDENODE)`] = $targetNodeLongNames[$index];
                        }
                        else if($existedNodeType == "lod4")
                        {
                            $LOD4_LIST_MTK_SHOWHIDENODE[`size($LOD4_LIST_MTK_SHOWHIDENODE)`] = $targetNodeLongNames[$index];
                        }
                        else if($existedNodeType == "lod5")
                        {
                            $LOD5_LIST_MTK_SHOWHIDENODE[`size($LOD5_LIST_MTK_SHOWHIDENODE)`] = $targetNodeLongNames[$index];
                        }
                        else if($existedNodeType == "lod6")
                        {
                            $LOD6_LIST_MTK_SHOWHIDENODE[`size($LOD6_LIST_MTK_SHOWHIDENODE)`] = $targetNodeLongNames[$index];
                        }
                        else if($existedNodeType == "lod7")
                        {
                            $LOD7_LIST_MTK_SHOWHIDENODE[`size($LOD7_LIST_MTK_SHOWHIDENODE)`] = $targetNodeLongNames[$index];
                        }

                        $NODE_LIST_BY_MDL_MTK_SHOWHIDENODE[$mdlCount] =  $NODE_LIST_BY_MDL_MTK_SHOWHIDENODE[$mdlCount] + $targetNodeLongNames[$index] + ",";

                    setParent ..;
                }
                else
                {
                    text -l "   -";
                }

                // チェックボックスのカラム幅を設定
                rowLayout -e
                    -columnWidth ($count + 1) $cw
                    -columnAlign ($count + 1) "center"
                    $rl;

                $count += 1;
            }

            button
                -l "on"
                -ann "すべてのチェックボックスをオンにします。"
                -h 16
                -bgc 0.5 0.6 0.5
                -c ("mtk_showHideNodeTool_setAllCheckboxValue(" + $mdlCount + ", true)")
                ;

            button
                -l "off"
                -ann "すべてのチェックボックスをオフにします。"
                -h 16
                -bgc 0.6 0.5 0.5
                -c ("mtk_showHideNodeTool_setAllCheckboxValue(" + $mdlCount + ", false)")
                ;

            setParent ..;

            $mdlCount += 1;
    }
        setParent ..;
}

///////////////////////////////////////
// オプション設定をトグル
///////////////////////////////////////
global proc mtk_showHideNodeTool_toggleOption(string $option)
{
    int $value = `optionVar -q $option`;

    optionVar -iv $option ($value == 0);
}

///////////////////////////////////////
// mdl_ ノード取得
///////////////////////////////////////
global proc string[] mtk_showHideNodeTool_getMdlNodes()
{
    string $MDL_LIST_MTK_SHOWHIDENODE[] = `ls -tr "|mdl_*"`;

    return $MDL_LIST_MTK_SHOWHIDENODE;
}

///////////////////////////////////////
// ノードタイプ別 ノードリスト取得
///////////////////////////////////////
global proc string[] mtk_showHideNodeTool_getNodeListByType(string $nodeType)
{
    string $nodes[];

    // ノードリスト
    global string $MDL_LIST_MTK_SHOWHIDENODE[];
    global string $MODEL_LIST_MTK_SHOWHIDENODE[];
    global string $COLLISION_LIST_MTK_SHOWHIDENODE[];
    global string $ROOT_JNT_LIST_MTK_SHOWHIDENODE[];
    global string $LOD1_LIST_MTK_SHOWHIDENODE[];
    global string $LOD2_LIST_MTK_SHOWHIDENODE[];
    global string $LOD3_LIST_MTK_SHOWHIDENODE[];
    global string $LOD4_LIST_MTK_SHOWHIDENODE[];
    global string $LOD5_LIST_MTK_SHOWHIDENODE[];
    global string $LOD6_LIST_MTK_SHOWHIDENODE[];
    global string $LOD7_LIST_MTK_SHOWHIDENODE[];

    if($nodeType == "mdl")
    {
         $nodes = $MDL_LIST_MTK_SHOWHIDENODE;
    }
    else if($nodeType == "model")
    {
        $nodes = $MODEL_LIST_MTK_SHOWHIDENODE;
    }
    else if($nodeType == "collision")
    {
        $nodes = $COLLISION_LIST_MTK_SHOWHIDENODE;
    }
    else if($nodeType == "jnt_0000_skl_root")
    {
        $nodes = $ROOT_JNT_LIST_MTK_SHOWHIDENODE;
    }
    else if($nodeType == "lod1")
    {
        $nodes = $LOD1_LIST_MTK_SHOWHIDENODE;
    }
    else if($nodeType == "lod2")
    {
        $nodes = $LOD2_LIST_MTK_SHOWHIDENODE;
    }
    else if($nodeType == "lod3")
    {
        $nodes = $LOD3_LIST_MTK_SHOWHIDENODE;
    }
    else if($nodeType == "lod4")
    {
        $nodes = $LOD4_LIST_MTK_SHOWHIDENODE;
    }
    else if($nodeType == "lod5")
    {
        $nodes = $LOD5_LIST_MTK_SHOWHIDENODE;
    }
    else if($nodeType == "lod6")
    {
        $nodes = $LOD6_LIST_MTK_SHOWHIDENODE;
    }
    else if($nodeType == "lod7")
    {
        $nodes = $LOD7_LIST_MTK_SHOWHIDENODE;
    }

    return $nodes;
}

///////////////////////////////////////
// ノードチェックボックス 全オンオフ
///////////////////////////////////////
global proc mtk_showHideNodeTool_setAllCheckboxValue(int $mdlIndex, int $value)
{
    if($value && `optionVar -q ov_soloSelect_mtk_showHideNodeTool`)
    {
        confirmDialog
            -t "Show/Hide Node"
            -m "ソロ選択モードでは使用できません。"
            -b "OK"
            ;

        return;
    }

    // チェックボックスリスト
    global string $NODE_LIST_BY_MDL_MTK_SHOWHIDENODE[];

    string $method[] = {"hide", "show"};

    string $nodeList[];

    tokenizeList($NODE_LIST_BY_MDL_MTK_SHOWHIDENODE[$mdlIndex], $nodeList);

    mtk_showHideNodeTool_showHideNode($nodeList, $method[$value], 0);
}

///////////////////////////////////////
// ノード 表示・非表示
///////////////////////////////////////
global proc mtk_showHideNodeTool_showHideNode(string $nodes[], string $method, int $isSolo)
{
    string $node;

    string $shownNodes[];

    for($node in $nodes)
    {
        // 非表示 / トグルにより非表示 になる場合
        if($method == "hide" || ($method == "toggle" && `getAttr ($node + ".visibility")` == true))
        {
            hide $node;
        }
        // 表示 / トグルにより表示 になる場合
        else
        {
            // mdl ノードリスト
            global string $MDL_LIST_MTK_SHOWHIDENODE[];

            // ノードリスト（mdlごと）
            global string $NODE_LIST_BY_MDL_MTK_SHOWHIDENODE[];

            // 親ノードを取得（mdl ノードかどうかの判定用）
            string $parents[] = `listRelatives  -parent $node`;

            // 実行コマンド
            string $cmd = "showHidden ";

            // mdl ノードの場合
            if($parents[0] == "")
            {
                // ソロ選択モード の場合
                if(`optionVar -q ov_soloSelect_mtk_showHideNodeTool`)
                {
                    hide $MDL_LIST_MTK_SHOWHIDENODE;

                    // 子ノード表示オプションがオンの場合
                    if(`optionVar -q "ov_showBelow_mtk_showHideNodeTool"`)
                    {
                        $cmd = $cmd + "-b ";
                    }
                }
                // ソロ表示メニューコマンド の場合
                else if($isSolo)
                {
                    hide $MDL_LIST_MTK_SHOWHIDENODE;

                    // 子ノード表示オプションがオンの場合
                    if(`optionVar -q "ov_showBelow_mtk_showHideNodeTool"`)
                    {
                        if(`optionVar -q ov_soloSelect_mtk_showHideNodeTool` == false)
                        {
                            $cmd = $cmd + "-b ";
                        }
                    }
                }
                else
                {
                    if(`optionVar -q "ov_showBelow_mtk_showHideNodeTool"`)
                    {
                        $cmd = $cmd + "-b ";
                    }
                }

            }
            // mdl ノード以外の場合
            else
            {
                // ソロ選択モード の場合
                if(`optionVar -q ov_soloSelect_mtk_showHideNodeTool`)
                {
                    int $index = stringArrayFind($parents[0], 0, $MDL_LIST_MTK_SHOWHIDENODE);

                    string $nodeList[];
                    tokenizeList($NODE_LIST_BY_MDL_MTK_SHOWHIDENODE[$index], $nodeList);

                    // 他のノードを非表示
                    hide $nodeList;

                    // 親ノードを表示オプションがオンの場合
                    if(`optionVar -q "ov_showAbove_mtk_showHideNodeTool"`)
                    {
                        // このタイプのノードのみを表示ではない かつ このタイプのノードを表示ではない かつ 表示トグルではない場合
                        if($isSolo != 3 && $method != "showByType" && $method != "toggle")
                        {
                            // mdl ノードを非表示
                            hide $MDL_LIST_MTK_SHOWHIDENODE;

                            $cmd = $cmd + "-a ";
                        }
                    }
                }
                // ソロ選択モードじゃない場合
                else
                {
                    // このノードのみを選択 or このタイプのノードのみを表示 の場合
                    if($isSolo == 2 || $isSolo == 3)
                    {
                        int $index = stringArrayFind($parents[0], 0, $MDL_LIST_MTK_SHOWHIDENODE);

                        string $nodeList[];
                        tokenizeList($NODE_LIST_BY_MDL_MTK_SHOWHIDENODE[$index], $nodeList);

                        // 他のノードを非表示
                        hide $nodeList;
                    }

                    // 親ノードを表示オプションがオンの場合
                    if(`optionVar -q "ov_showAbove_mtk_showHideNodeTool"`)
                    {
                        $cmd = $cmd + "-a ";
                    }

                }

                // 子ノードを表示オプションがオンの場合
                if(`optionVar -q "ov_showBelow_mtk_showHideNodeTool"`)
                {
                    $cmd = $cmd + "-b ";
                }
            }

            // 表示コマンド実行
            eval $cmd $node;

            // 表示したノードリストに追加
            $shownNodes[`size($shownNodes)`] = $node;
        }

    }

    // ノード表示と同時に選択オプションがオンの場合
    if(`optionVar -q "ov_selectNode_mtk_showHideNodeTool"`)
    {
        // 表示したノードを選択
        select -r $shownNodes;
    }
}

///////////////////////////////////////
// ノードタイプ別 表示・非表示
///////////////////////////////////////
global proc mtk_showHideNodeTool_showHideByNodeType(string $nodeType, string $method, int $isSolo)
{
    if($nodeType == "mdl" && `optionVar -q ov_soloSelect_mtk_showHideNodeTool` && $method != "hide")
    {
        confirmDialog
            -t "Show/Hide Node"
            -m "ソロ選択モードでは使用できません。"
            -b "OK"
            ;

        return;
    }

    // タイプ別ノードリスト取得
    string $nodes[] = `mtk_showHideNodeTool_getNodeListByType($nodeType)`;

    //
    if($isSolo || ($isSolo && `optionVar -q ov_soloSelect_mtk_showHideNodeTool`))
    {
        // mdl ノードリスト
        global string $MDL_LIST_MTK_SHOWHIDENODE[];

        // ノードリスト（mdlごと）
        global string $NODE_LIST_BY_MDL_MTK_SHOWHIDENODE[];

        string $mdl;
        int $index;

        for($mdl in $MDL_LIST_MTK_SHOWHIDENODE)
        {
            string $nodeList[];
            tokenizeList($NODE_LIST_BY_MDL_MTK_SHOWHIDENODE[$index], $nodeList);

            string $node;
            int $found;

            for($node in $nodes)
            {
                $found = stringArrayContains($node, $nodeList);

                if($found)
                {
                    break;
                }
            }

            if($found == false)
            {
                mtk_showHideNodeTool_setAllCheckboxValue($index, 0);
            }

            $index += 1;
        }
    }

    mtk_showHideNodeTool_showHideNode($nodes, $method, $isSolo);
}

///////////////////////////////////////
// ノードタイプ別 テンプレート化・テンプレート化解除
///////////////////////////////////////
global proc mtk_showHideNodeTool_templeteByNodeType(string $nodeType, int $value)
{
    // タイプ別ノードリスト取得
    string $nodes[] = `mtk_showHideNodeTool_getNodeListByType($nodeType)`;

    toggle -state $value -template $nodes;
}

///////////////////////////////////////
// ノードタイプ別 選択
///////////////////////////////////////
global proc mtk_showHideNodeTool_selectByNodeType(string $nodeType)
{
    // タイプ別ノードリスト取得
    string $nodes[] = `mtk_showHideNodeTool_getNodeListByType($nodeType)`;

    select -r $nodes;
}

//mtk_showHideNodeTool
