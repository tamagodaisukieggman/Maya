//===============================================
//
// ファイルノードを取得
//
// Fujita Yukihiro
//
//===============================================

///////////////////////////////////////////////////////
// オブジェクトで使用しているファイルノードを返す
///////////////////////////////////////////////////////
global proc string[] fy_getFileNodes_fromObjects(string $objects[])
{
    // 現在の選択を取得
    string $sel[] = `ls -sl`;
    
    select -r $objects;
    
    string $fileNodes[];

    // 選択モデルにアサインされているマテリアルを選択
    hyperShade -smn;    

    string $materials[] = `ls -sl`;
    string $material;
    
    for($material in $materials)
    {
        // ファイルノードを取得
        $fileNodes = stringArrayCatenate($fileNodes, `fy_getFileNodes_fromMaterial($material)`);
    }

    // 重複を削除
    $fileNodes = stringArrayRemoveDuplicates($fileNodes);
    
    // 選択を復元
    select -r $sel;
    
    return $fileNodes;
}

///////////////////////////////////////////////////////
// マテリアルで使用しているファイルノードを返す
///////////////////////////////////////////////////////
global proc string[] fy_getFileNodes_fromMaterial(string $material)
{
    string $fileNodes[];
    
    // マテリアルのコネクションを取得
    string $connections[] = `listConnections -destination false -source true $material`;
    
    string $connection;
    
    for($connection in $connections)
    {
        // コネクションがfile ノードの場合
        if(`nodeType($connection)` == "file")
        {
            // ファイルノードリストに追加
            $fileNodes[`size($fileNodes)`] = $connection;
        }
        else
        {
            // ファイルノードを取得（再帰呼び出し）
            string $result[] = `fy_getFileNodes_fromMaterial($connection)`;
            
            // ファイルノードリストに追加
            $fileNodes = stringArrayCatenate($fileNodes, $result);
        }
    }  
    
    // 重複を削除
    $fileNodes = stringArrayRemoveDuplicates($fileNodes);

    return $fileNodes;
}

///////////////////////////////////////////////////////
// オブジェクトで使用しているテクスチャを返す
///////////////////////////////////////////////////////
global proc string[] fy_getTextures_fromObjects(string $type, string $objects[])
{
    string $fileNodes[] = fy_getFileNodes_fromObjects($objects);
    
    string $textureFiles[];
    
    string $fileNode;
    
    for($fileNode in $fileNodes)
    {
        string $textureFile = `getAttr ($fileNode + ".fileTextureName")`;
        
        if($type == "basename")
        {
            $textureFile = basename($textureFile, "");
        }
        
        $textureFiles[`size($textureFiles)`] = $textureFile;
    }
    
    // 重複を削除
    $textureFiles = stringArrayRemoveDuplicates($textureFiles);

    return $textureFiles;
}

