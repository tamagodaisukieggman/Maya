//===============================================
//
// モデル受け渡し ツール
//
// Fujita Yukihiro
//
//===============================================

global proc fy_deliveryModelTool()
{
    source "Z:/mtk/tools/maya/modules/mtk3d/scripts/fy_captureThumnail.mel";
    source "Z:/mtk/tools/maya/modules/mtk3d/scripts/fy_getFileNodes.mel";

    //プリファレンスに値が無ければデフォルト値を設定
    if (`optionVar -ex "ov_selTabIndex_fy_deliveryModelTool"` == 0)
    {
        // 最後に選択したタブ （「ローカル」タブ or 「受け渡し」タブ）
        optionVar -iv "ov_selTabIndex_fy_deliveryModelTool" 1;
    }
    if (`optionVar -ex "ov_selDeliveryTabIndex_fy_deliveryModelTool"` == 0)
    {
        // 最後に選択した受け渡しタブ （「送る」タブ or 「受け渡し」タブ or 「送ったデータ」タブ）
        optionVar -iv "ov_selDeliveryTabIndex_fy_deliveryModelTool" 1;
    }

    // ローカルの書き出し先フォルダ名
    global string $LOCALEXPORTPATH_FY_DELIVERYMODELTOOL;
    $LOCALEXPORTPATH_FY_DELIVERYMODELTOOL = `getenv "MAYA_APP_DIR"` + "/Datas/fy_deliveryModelTool/";

    // ローカルの書き出し先フォルダが存在しなければ
    if (`filetest -d $LOCALEXPORTPATH_FY_DELIVERYMODELTOOL` == 0)
    {
        // ローカルの書き出し先フォルダ作成
        sysFile -makeDir $LOCALEXPORTPATH_FY_DELIVERYMODELTOOL;
    }

    // 以前のローカル書き出し先フォルダ名
    // Windows のTemp フォルダが定期的にクリーンナップされるため書き出し先を変更した
    string $oldLocalExportPath = `getenv "TMPDIR"` + "/fy_deliveryModelTool/";

    // 以前のローカル書き出し先に残っているファイルを取得
    string $files[] = `getFileList -fld $oldLocalExportPath`;

    // 以前のローカル書き出し先フォルダにファイルが存在すれば、ファイルを新しい書き出し先にコピー
    if(`size($files)` != 0)
    {
        string $file;

        for($file in $files)
        {
            string $sourceFile = $oldLocalExportPath + $file;
            string $destinationFile = $LOCALEXPORTPATH_FY_DELIVERYMODELTOOL + $file;

            // コピー先ファイルが存在しなければ
            if(`filetest -f $destinationFile` == false)
            {
                sysFile -copy $destinationFile $sourceFile;
            }
        }
    }

    //optionVar -rm "ov_alphabetName_fy_deliveryModelTool";
    //optionVar -rm "ov_displayName_fy_deliveryModelTool";

    //optionVar -sv "ov_alphabetName_fy_deliveryModelTool" "fujita_yukihiro";

    // 受け渡し用のルートフォルダ
    global string $DELIVERYROOTPATH_FY_DELIVERYMODELTOOL;
    $DELIVERYROOTPATH_FY_DELIVERYMODELTOOL = "//cgs-str-fas05/100_projects/117_mutsunokami/90_send/";

    // ユーザー間受け渡し機能のオンオフ
    int $deliveryEnabled = true;

    // 受け渡し用のフォルダにアクセスできるか
    if(`filetest -d $DELIVERYROOTPATH_FY_DELIVERYMODELTOOL` == false)
    {
        confirmDialog
            -t "Delivery Model Tool"
            -icn "critical"
            -m (substituteAllString($DELIVERYROOTPATH_FY_DELIVERYMODELTOOL, "/", "\\") + "\n\n にアクセスできませんでした。ユーザー間の受け渡し機能は使用できません。")
            -b "OK"
            -icn "warning"
            ;

        $deliveryEnabled = false;
    }

    if($deliveryEnabled)
    {
        // ユーザー名を設定
        if (`optionVar -ex "ov_alphabetName_fy_deliveryModelTool"` == 0)
        {
            if(`fy_deliveryModelTool_setUserName` == false)
            {
                $deliveryEnabled = false;
            }
        }
    }

    // 受け渡し用のユーザーフォルダ
    global string $DELIVERYUSERPATH_FY_DELIVERYMODELTOOL;

    if($deliveryEnabled)
    {
        $DELIVERYUSERPATH_FY_DELIVERYMODELTOOL = fy_deliveryModelTool_getUserFolder(`optionVar -q "ov_alphabetName_fy_deliveryModelTool"`);

        //$DELIVERYUSERPATH_FY_DELIVERYMODELTOOL = $DELIVERYROOTPATH_FY_DELIVERYMODELTOOL + "from_" + `optionVar -q "ov_alphabetName_fy_deliveryModelTool"` + "/deliveryModelTool/";

        // 受け渡し用のユーザーフォルダが無ければ作成
        if(`filetest -d $DELIVERYUSERPATH_FY_DELIVERYMODELTOOL` == false)
        {
            if(`fy_deliveryModelTool_createDeliveryFolder($DELIVERYUSERPATH_FY_DELIVERYMODELTOOL)` == false)
            {
                $deliveryEnabled = false;
            }
        }
    }

    if($deliveryEnabled)
    {
        // 表示名設定ファイル
        string $nameFile = $DELIVERYUSERPATH_FY_DELIVERYMODELTOOL + "name.txt";

        // 表示名設定ファイルが無ければ作成
        if(`filetest -f $nameFile` == false)
        {
            string $displayName = `optionVar -q "ov_displayName_fy_deliveryModelTool"`;

            if(fy_deliveryModelTool_createUserNameFile($DELIVERYUSERPATH_FY_DELIVERYMODELTOOL, $displayName) == false)
            {
                $deliveryEnabled = false;
            }
        }
    }

    // ユーザー間受け渡し機能のオンオフ状態
    optionVar -iv "ov_deliveryEnabled_fy_deliveryModelTool" $deliveryEnabled;
    //optionVar -iv "ov_deliveryEnabled_fy_deliveryModelTool" false;

    // すでにウィンドウが出ていたら
    if (`window -exists uWnd_fy_deliveryModelTool` == 1)
    {
        //return;
        deleteUI uWnd_fy_deliveryModelTool;
    }

    window
        -title "Delivery Model Tool"
        -resizeToFitChildren on
        -sizeable on
        -toolbox off
        -maximizeButton off
        -mb on
        uWnd_fy_deliveryModelTool;

        menu -label "リスト";
            menuItem
                -label "リストを更新"
                -enable on
                -c "fy_deliveryModelTool_refreshAllList"
                ;

        menu -label "設定";
            menuItem
                -label "自分の表示名を変更..."
                -enable `optionVar -q "ov_deliveryEnabled_fy_deliveryModelTool"`
                -c "fy_deliveryModelTool_changeUserName"
                ;

            menuItem -d true;

            menuItem
                -label "共有用ユーザーを作成..."
                -enable `optionVar -q "ov_deliveryEnabled_fy_deliveryModelTool"`
                -c "fy_deliveryModelTool_createSharedUser"
                ;
/*
            menuItem
                -label "共有用ユーザーを削除..."
                -enable `optionVar -q "ov_deliveryEnabled_fy_deliveryModelTool"`
                -c "fy_deliveryModelTool_deleteSharedUser"
                ;
*/

        string $cmd = "python(\"import webbrowser\\nwebbrowser.open('https://wisdom.cygames.jp/pages/viewpage.action?pageId=108702369')\")";

        menu -label "ヘルプ" ;
            menuItem
                -label "Delivery Model Tool のヘルプ"
                -enable on
                -c $cmd
                ;

    tabLayout uTl_fy_deliveryModelTool;

    // 「ローカル」タブを作成
    fy_deliveryModelTool_createLocalTab;

    // 「受け渡し」タブを作成
    fy_deliveryModelTool_createDeliveryTab;

    // タブ名設定など
    tabLayout -e
        -tabLabelIndex 1 "ローカル"
        -tabLabelIndex 2 "受け渡し"
        -selectCommand "optionVar -iv \"ov_selTabIndex_fy_deliveryModelTool\" (`tabLayout -q -sti uTl_fy_deliveryModelTool`)"
        -sti `optionVar -q "ov_selTabIndex_fy_deliveryModelTool"`
        uTl_fy_deliveryModelTool;

    showWindow;

    // テキストスクロールリストを更新する
    fy_deliveryModelTool_refreshAllList;

    // 送ったデータの容量をチェック
    fy_deliveryModelTool_checkSentDatasSize;

    // スクリプトジョブ設定（選択変化時）
    scriptJob -event "SelectionChanged" "fy_deliveryModelTool_refreshSendList" -parent uWnd_fy_deliveryModelTool;
}

///////////////////////////////////////////////////////
// 「ローカル」タブを作成
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_createLocalTab()
{
    setParent uTl_fy_deliveryModelTool;

    frameLayout
        -lv off
        -mw 4 -mh 4
        uFl_local_fy_deliveryModelTool;

        formLayout uFrml_local_fy_deliveryModelTool;

            textScrollList
                -allowMultiSelection on
                -sc "fy_deliveryModelTool_refreshFileInfo(\"local\")"
                uTsl_local_fy_deliveryModelTool;

            button
                -l "エクスポート"
                -c "fy_deliveryModelTool_export"
                -bgc 0.5 0.6 0.5
                uBtn_exp_fy_deliveryModelTool;

            button
                -l "インポート"
                -c "fy_deliveryModelTool_import"
                -bgc 0.5 0.6 0.5
                uBtn_imp_fy_deliveryModelTool;
            button
                -l "削除"
                -c "fy_deliveryModelTool_delete"
                -bgc 0.6 0.5 0.5
                uBtn_del_fy_deliveryModelTool;

    string $fll = `rowLayout -nc 2`;
        image -i "" -w 180 -h 160 uImg_local_fy_deliveryModelTool;

            rowColumnLayout -nc 2 -cal 1 "right" -cal 2 "left" -rs 1 8 uRcl_localInfo_fy_deliveryModelTool;
                text -l "日時 : ";
                text -l "" uTxt_localDate_fy_deliveryModelTool;
                text -l "サイズ : ";
                text -l "" uTxt_localFileSize_fy_deliveryModelTool;
                text -l "説明 : ";
                text -l "" uTxt_localDescription_fy_deliveryModelTool;
                setParent ..;
                setParent ..;

            symbolButton
                -i "fileOpen.png"
                -c "fy_deliveryModelTool_openTempFolder"
                -ann "一時ファイル出力先フォルダをエクスプローラで開く"
                uSBtn_del_fy_deliveryModelTool;

        formLayout -e
            -attachForm       uTsl_local_fy_deliveryModelTool    "top" 0
            -attachForm       uTsl_local_fy_deliveryModelTool    "left" 0
            -attachForm       uTsl_local_fy_deliveryModelTool    "right" 0
            -attachControl    uTsl_local_fy_deliveryModelTool    "bottom" 4 $fll

            -attachForm        $fll    "left" 8
            -attachForm        $fll    "right" 8
            -attachControl     $fll    "bottom" 8 uBtn_exp_fy_deliveryModelTool

            -attachForm        uBtn_exp_fy_deliveryModelTool    "left" 0
            -attachPosition    uBtn_exp_fy_deliveryModelTool    "right" 1 50
            -attachControl     uBtn_exp_fy_deliveryModelTool    "bottom" 2 uBtn_del_fy_deliveryModelTool

            -attachForm        uBtn_imp_fy_deliveryModelTool    "right" 0
            -attachPosition    uBtn_imp_fy_deliveryModelTool    "left" 1 50
            -attachControl     uBtn_imp_fy_deliveryModelTool    "bottom" 2 uBtn_del_fy_deliveryModelTool

            -attachForm        uBtn_del_fy_deliveryModelTool    "left" 0
            -attachControl     uBtn_del_fy_deliveryModelTool    "right" 8 uSBtn_del_fy_deliveryModelTool
            -attachForm        uBtn_del_fy_deliveryModelTool    "bottom" 0

            -attachForm        uSBtn_del_fy_deliveryModelTool    "right" 0
            -attachForm        uSBtn_del_fy_deliveryModelTool    "bottom" 0

            uFrml_local_fy_deliveryModelTool;

    setParent uTl_fy_deliveryModelTool;
}

///////////////////////////////////////////////////////
// 「受け渡し」タブを作成
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_createDeliveryTab()
{
    // ユーザー間受け渡し機能のオンオフ状態
    int $deliveryEnabled = `optionVar -q "ov_deliveryEnabled_fy_deliveryModelTool"`;

    setParent uTl_fy_deliveryModelTool;

    frameLayout
        -lv off
        -mh 3 -mw 3
        -en $deliveryEnabled
        uFl_delivery_fy_deliveryModelTool;

        paneLayout -configuration "horizontal2" uPnL_delivery_fy_deliveryModelTool;

            frameLayout -l "ユーザー";
                textScrollList
                    -allowMultiSelection on
                    -selectCommand "fy_deliveryModelTool_selectUserCommand"
                    uTsl_users_fy_deliveryModelTool;
                setParent ..;

            tabLayout uTbl_delivery_fy_deliveryModelTool;

            // 「送る」タブを作成
            fy_deliveryModelTool_createSendTab;

            // 「受け取る」タブを作成
            fy_deliveryModelTool_createRecieveTab;

            // 「送ったデータ」タブを作成
            fy_deliveryModelTool_createSentTab;

            tabLayout
                -e
                -tabLabelIndex 1 "送る"
                -tabLabelIndex 2 "受け取る"
                -tabLabelIndex 3 "送ったデータ"
                -selectCommand "optionVar -iv \"ov_selDeliveryTabIndex_fy_deliveryModelTool\" (`tabLayout -q -sti uTbl_delivery_fy_deliveryModelTool`)"
                -sti `optionVar -q "ov_selDeliveryTabIndex_fy_deliveryModelTool"`
                uTbl_delivery_fy_deliveryModelTool;

    setParent uTl_fy_deliveryModelTool;
}

///////////////////////////////////////////////////////
// 「送る」タブを作成
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_createSendTab()
{
    setParent uTbl_delivery_fy_deliveryModelTool;

    string $form = `formLayout`;
    string $tsl = `textScrollList uTsl_send_fy_deliveryModelTool`;

    string $btn = `button -l "送る" -c "fy_deliveryModelTool_send" -bgc 0.5 0.6 0.5`;
    string $sbtn = `symbolButton -image "fileOpen.png" -c "fy_deliveryModelTool_openDeliveryFolder(\"send\")"`;

    formLayout -e
        -attachForm $tsl "top"    0
        -attachForm $tsl "left"    0
        -attachForm $tsl "right"    0
        -attachControl $tsl "bottom"  4 $btn

        -attachForm    $btn    "left"     0
        -attachControl $btn    "right"    4 $sbtn
        -attachForm    $btn    "bottom"    0

        -attachForm $sbtn    "right" 0
        -attachForm $sbtn    "bottom"    0

        $form;

    setParent uTbl_delivery_fy_deliveryModelTool;
}

///////////////////////////////////////////////////////
// 「受け取る」タブを作成
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_createRecieveTab()
{
    setParent uTbl_delivery_fy_deliveryModelTool;

    string $form = `formLayout`;
    string $tsl = `textScrollList -allowMultiSelection on -sc "fy_deliveryModelTool_refreshFileInfo(\"recieve\")" uTsl_recieve_fy_deliveryModelTool`;
    string $fll = `rowLayout -nc 2`;
        image -i "" -w 180 -h 160 uImg_recieve_fy_deliveryModelTool;
        rowColumnLayout -nc 2 -cal 1 "right" -cal 2 "left" -rs 1 8;
        text -l "日時 : ";
        text -l "" uTxt_recieveDate_fy_deliveryModelTool;
        text -l "サイズ : ";
        text -l "" uTxt_recieveFileSize_fy_deliveryModelTool;
        text -l "説明 : ";
        text -l "" uTxt_recieveDescription_fy_deliveryModelTool;
    setParent ..;
    setParent ..;

    string $bt1 = `button -l "受け取る" -c "fy_deliveryModelTool_recieve" -bgc 0.5 0.5 0.6`;
    string $bt2 = `button -l " 削除 " -c "fy_deliveryModelTool_deleteDeliveryFiles(\"recieve\")" -bgc 0.6 0.5 0.5`;
    string $sbtn = `symbolButton -image "fileOpen.png" -c "fy_deliveryModelTool_openDeliveryFolder(\"recieve\")"`;

    formLayout -e
        -attachForm $tsl "top"    0
        -attachForm $tsl "left"    0
        -attachForm $tsl "right"    0
        -attachControl $tsl "bottom"  4 $fll

        -attachForm    $fll    "left"     8
        -attachForm    $fll    "right"    0
        -attachControl $fll    "bottom"   8 $bt1

        -attachForm    $bt1    "left"     0
        -attachControl $bt1    "right"    4 $bt2
        -attachForm    $bt1    "bottom"    0

        -attachControl $bt2    "right"    4 $sbtn
        -attachForm    $bt2    "bottom"    0

        -attachForm $sbtn    "right" 0
        -attachForm $sbtn    "bottom"    0

        $form;

    setParent uTbl_delivery_fy_deliveryModelTool;
}

///////////////////////////////////////////////////////
// 「送ったデータ」タブを作成
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_createSentTab()
{
    setParent uTbl_delivery_fy_deliveryModelTool;

    string $form = `formLayout`;
    string $tsl = `textScrollList -allowMultiSelection on -sc "fy_deliveryModelTool_refreshFileInfo(\"send\")" uTsl_sent_fy_deliveryModelTool`;
    string $fll = `rowLayout -nc 2`;
        image -i "" -w 180 -h 160 uImg_sent_fy_deliveryModelTool;
        rowColumnLayout -nc 2 -cal 1 "right" -cal 2 "left" -rs 1 8;
        text -l "日時 : ";
        text -l "" uTxt_sentDate_fy_deliveryModelTool;
        text -l "サイズ : ";
        text -l "" uTxt_sentFileSize_fy_deliveryModelTool;
        text -l "説明 : ";
        text -l "" uTxt_sentDescription_fy_deliveryModelTool;
    setParent ..;
    setParent ..;

    string $btn = `button -l "削除" -c "fy_deliveryModelTool_deleteDeliveryFiles(\"send\")" -bgc 0.6 0.5 0.5`;
    string $sbtn = `symbolButton -image "fileOpen.png" -c "fy_deliveryModelTool_openDeliveryFolder(\"send\")"`;

    formLayout -e
        -attachForm $tsl "top"    0
        -attachForm $tsl "left"    0
        -attachForm $tsl "right"    0
        -attachControl $tsl "bottom"  4 $fll

        -attachNone    $fll    "top"
        -attachForm    $fll    "left"     8
        -attachForm    $fll    "right"    0
        -attachControl $fll    "bottom"   8 $btn

        -attachForm    $btn    "left"     0
        -attachControl $btn    "right"    4 $sbtn
        -attachForm    $btn    "bottom"    0

        -attachForm $sbtn    "right" 0
        -attachForm $sbtn    "bottom"    0

        $form;

    setParent uTbl_delivery_fy_deliveryModelTool;
}

///////////////////////////////////////////////////////
// ユーザー名設定
///////////////////////////////////////////////////////
global proc int fy_deliveryModelTool_setUserName()
{
    // ダイアログ表示
    string $result = `layoutDialog -title "ユーザー名設定" -ui "fy_deliveryModelTool_setUserNameDialogUI"`;

    if($result == "dismiss")
    {
        return false;
    }
    else
    {
        return true;
    }
}

///////////////////////////////////////////////////////
// 名前設定ダイアログ
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_setUserNameDialogUI()
{
    // このダイアログのフォームレイアウトを取得
    string $form= `setParent -q`;

    formLayout -e $form;
        string $CL = `columnLayout -adj on`;
            text -l "\nユーザー間の受け渡しに使用する名前を設定します。\n\n例にならって、名前を入力してください。\n\n";

            text -l "表示名 （例：最場 太郎）";
            string $TF1 = `textField -text "" -w 200 -ann "ユーザーリストに表示される表示名" uTf_displayName_fy_deliveryModelTool`;

            text -l "";

            text -l "アルファベット名 （例：saiba_taro）";

            string $TF2 = `textField -text "" -w 200 -ann "受け渡しフォルダに使用されるアルファベット名" uTf_alphabetName_fy_deliveryModelTool`;
            setParent ..;

        string $BtnOK = `button -l "OK" -c "fy_deliveryModelTool_setUserNameDialogUI_okCallback"`;
        string $BtnCancel = `button -l "キャンセル" -c "layoutDialog -dismiss \"dismiss\""`;

    int $spacer = 8;

    formLayout -e
        -attachForm $CL "top" $spacer
        -attachForm $CL "left" $spacer
        -attachForm $CL "right" $spacer
        -attachForm $CL "top" $spacer
        -attachForm $BtnOK "left" $spacer
        -attachForm $BtnOK "bottom" $spacer
        -attachForm $BtnCancel "right" $spacer
        -attachForm $BtnCancel "bottom" $spacer

        -attachControl $CL "bottom" 16 $BtnOK

        -attachPosition $BtnOK "right" 4 50
        -attachPosition $BtnCancel "left" 4 50

        $form;
}

///////////////////////////////////////////////////////
// 名前設定ダイアログ OK ボタンコールバック
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_setUserNameDialogUI_okCallback()
{
    global string $DELIVERYROOTPATH_FY_DELIVERYMODELTOOL;

    // 表示名を取得
    string $displayName = `textField -q -text uTf_displayName_fy_deliveryModelTool`;

    // アルファベット名を取得
    string $alphabetName = `textField -q -text uTf_alphabetName_fy_deliveryModelTool`;

    // いずれかのフィールドに入力されていなかったら戻る
    if($displayName == "" || $alphabetName == "")
    {
        return;
    }

    // アルファベット名を小文字に
    $alphabetName = `tolower $alphabetName`;

    // アルファベット名のチェック
    if(`isValidString $alphabetName "[a-z]+_[a-z]+"` == false)
    {
        confirmDialog
            -t "Delivery Model Tool"
            -icn "warning"
            -m "アルファベット名は、\"lastname_firstname\" の形で入力したください。"
            -b "OK"
            ;
        return;
    }

    // プリファレンスに保存
    optionVar -sv "ov_alphabetName_fy_deliveryModelTool" $alphabetName;
    optionVar -sv "ov_displayName_fy_deliveryModelTool" $displayName;

    layoutDialog -dismiss "done";
}

///////////////////////////////////////////////////////
// ユーザー名変更
///////////////////////////////////////////////////////
global proc int fy_deliveryModelTool_changeUserName()
{
    // ダイアログ表示
    string $result = `layoutDialog -title "ユーザー名設定" -ui "fy_deliveryModelTool_changeUserNameDialogUI"`;

    if($result == "dismiss")
    {
        return false;
    }
    else
    {
        // テキストスクロールリストを更新
        fy_deliveryModelTool_refreshAllList;

        return true;
    }
}

///////////////////////////////////////////////////////
// 名前変更ダイアログ
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_changeUserNameDialogUI()
{
    string $dispName = `optionVar -q "ov_displayName_fy_deliveryModelTool"`;

    // このダイアログのフォームレイアウトを取得
    string $form= `setParent -q`;

    formLayout -e $form;
        string $CL = `columnLayout -adj on`;
            text -l "\nユーザー間の受け渡しに使用する名前を変更kします。\n\n例にならって、名前を入力してください。\n\n";

            text -l "表示名 （例：最場 太郎）";
            string $TF1 = `textField -text $dispName -w 200 -ann "ユーザーリストに表示される表示名" uTf_displayName_fy_deliveryModelTool`;

            setParent ..;

        string $BtnOK = `button -l "OK" -c "fy_deliveryModelTool_changeUserNameDialogUI_okCallback"`;
        string $BtnCancel = `button -l "キャンセル" -c "layoutDialog -dismiss \"dismiss\""`;

    int $spacer = 8;

    formLayout -e
        -attachForm $CL "top" $spacer
        -attachForm $CL "left" $spacer
        -attachForm $CL "right" $spacer
        -attachForm $CL "top" $spacer
        -attachForm $BtnOK "left" $spacer
        -attachForm $BtnOK "bottom" $spacer
        -attachForm $BtnCancel "right" $spacer
        -attachForm $BtnCancel "bottom" $spacer

        -attachControl $CL "bottom" 16 $BtnOK

        -attachPosition $BtnOK "right" 4 50
        -attachPosition $BtnCancel "left" 4 50

        $form;
}

///////////////////////////////////////////////////////
// 名前変更ダイアログ OK ボタンコールバック
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_changeUserNameDialogUI_okCallback()
{
    // 現在の表示名を取得
    string $currentName = `optionVar -q "ov_displayName_fy_deliveryModelTool"`;

    // 新しい表示名を取得
    string $newName = `textField -q -text uTf_displayName_fy_deliveryModelTool`;

    // フィールドに入力されていなかったら戻る
    if($newName == "")
    {
        return;
    }

    // プリファレンスに保存
    optionVar -sv "ov_displayName_fy_deliveryModelTool" $newName;

    global string $DELIVERYUSERPATH_FY_DELIVERYMODELTOOL;

    // ユーザー名設定ファイルに保存
    int $result = fy_deliveryModelTool_createUserNameFile($DELIVERYUSERPATH_FY_DELIVERYMODELTOOL, $newName);

    // 保存成功
    if($result)
    {
        layoutDialog -dismiss "done";
    }
    // 保存失敗
    else
    {
        // 元の名前に戻す
        optionVar -sv "ov_displayName_fy_deliveryModelTool" $currentName;

        layoutDialog -dismiss "dismiss";
    }
}

///////////////////////////////////////////////////////
// 共有用ユーザー作成
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_createSharedUser()
{
    // ダイアログ表示
    string $result = `layoutDialog -title "共有用ユーザー作成" -ui "fy_deliveryModelTool_createSharedUserDialogUI"`;

    if($result != "dismiss")
    {
        // リストを更新
        fy_deliveryModelTool_refreshAllList;
    }
}

///////////////////////////////////////////////////////
// 共有用ユーザー作成ダイアログ
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_createSharedUserDialogUI()
{
    // このダイアログのフォームレイアウトを取得
    string $form= `setParent -q`;

    formLayout -e $form;
        string $CL = `columnLayout -adj on`;
            text -l "\n共有用ユーザーを作成します。\n\n例にならって、名前を入力してください。\n\n";

            text -l "表示名 （例：背景班）";
            string $TF1 = `textField -text "" -w 200 -ann "ユーザーリストに表示される表示名" uTf_displayName_fy_deliveryModelTool`;

            text -l "";

            text -l "アルファベット名 （例：environment_artists）";

            string $TF2 = `textField -text "" -w 200 -ann "受け渡しフォルダに使用されるアルファベット名" uTf_alphabetName_fy_deliveryModelTool`;
            setParent ..;

        string $BtnOK = `button -l "OK" -c "fy_deliveryModelTool_createSharedUserDialogUI_okCallback"`;
        string $BtnCancel = `button -l "キャンセル" -c "layoutDialog -dismiss \"dismiss\""`;

    int $spacer = 8;

    formLayout -e
        -attachForm $CL "top" $spacer
        -attachForm $CL "left" $spacer
        -attachForm $CL "right" $spacer
        -attachForm $CL "top" $spacer
        -attachForm $BtnOK "left" $spacer
        -attachForm $BtnOK "bottom" $spacer
        -attachForm $BtnCancel "right" $spacer
        -attachForm $BtnCancel "bottom" $spacer

        -attachControl $CL "bottom" 16 $BtnOK

        -attachPosition $BtnOK "right" 4 50
        -attachPosition $BtnCancel "left" 4 50

        $form;
}

///////////////////////////////////////////////////////
// 共有用ユーザー作成ダイアログ OK ボタンコールバック
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_createSharedUserDialogUI_okCallback()
{
    global string $DELIVERYROOTPATH_FY_DELIVERYMODELTOOL;

    // 表示名を取得
    string $displayName = "【共有】" + `textField -q -text uTf_displayName_fy_deliveryModelTool`;

    // アルファベット名を取得
    string $alphabetName = `textField -q -text uTf_alphabetName_fy_deliveryModelTool`;

    // いずれかのフィールドに入力されていなかったら戻る
    if($displayName == "" || $alphabetName == "")
    {
        return;
    }

    // アルファベット名を小文字に
    $alphabetName = `tolower $alphabetName`;

    // アルファベット名のチェック
    if(`isValidObjectName($alphabetName)` == false)
    {
        confirmDialog
            -t "Delivery Model Tool"
            -icn "warning"
            -m "アルファベット名にはアルファベット、数字、アンダースコア以外は使用できません。"
            -b "OK"
            ;
        return;
    }

    layoutDialog -dismiss "done";

    string $folder = fy_deliveryModelTool_getUserFolder($alphabetName);

    // 受け渡しフォルダ作成
    fy_deliveryModelTool_createDeliveryFolder($folder);

    // ユーザー名ファイル作成
    fy_deliveryModelTool_createUserNameFile($folder, $displayName);
}

///////////////////////////////////////////////////////
// 受け渡しフォルダ作成
///////////////////////////////////////////////////////
global proc int fy_deliveryModelTool_createDeliveryFolder(string $folder)
{
    //global string $DELIVERYUSERPATH_FY_DELIVERYMODELTOOL;

    // フォルダが作成できなかったら終了
    if(`sysFile -makeDir $folder` == false)
    {
        confirmDialog
            -t "Delivery Model Tool"
            -icn "critical"
            -m "受け渡し用フォルダを作成できませんでした。"
            -b "OK"
            -icn "warning"
            ;

        return false;
    }

    return true;
}

///////////////////////////////////////////////////////
// ユーザー名ファイル作成
///////////////////////////////////////////////////////
global proc int fy_deliveryModelTool_createUserNameFile(string $folder, string $displayName)
{
    //global string $DELIVERYUSERPATH_FY_DELIVERYMODELTOOL;

    // 表示名設定ファイル
    string $nameFile = $folder + "name.txt";
    //string $nameFile = $DELIVERYUSERPATH_FY_DELIVERYMODELTOOL + "name.txt";

    //string $displayName = `optionVar -q "ov_displayName_fy_deliveryModelTool"`;

    // 表示名ファイル書き込み
    if(fwriteAllText($nameFile, $displayName) != 0)
    {
        confirmDialog
            -t "Delivery Model Tool"
            -m "表示名を保存できませんでした。"
            -b "OK"
            -icn "warning"
            ;

        return false;
    }

    return true;
}



///////////////////////////////////////////////////////
// ローカルリスト更新
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_refreshLocalList()
{
    string $i;

    // ローカル用エクスポートパス
    global string $LOCALEXPORTPATH_FY_DELIVERYMODELTOOL;

    // 現在選択している項目
    string $selItems[] = `textScrollList -q -si uTsl_local_fy_deliveryModelTool`;

    // ローカル用リストの内容を一旦クリア
    textScrollList -e -removeAll uTsl_local_fy_deliveryModelTool;

    // ローカル用エクスポートフォルダにある .mb ファイルのリストを取得
    string $mbList[] = `getFileList -fld $LOCALEXPORTPATH_FY_DELIVERYMODELTOOL -filespec "*.ma"`;

    // 取得した .mb ファイルの名前をリストに項目として追加
    for ($i in $mbList)
    {
        textScrollList -e
            -append $i
            -uniqueTag ($LOCALEXPORTPATH_FY_DELIVERYMODELTOOL + $i)
            uTsl_local_fy_deliveryModelTool;
    }

    // 選択を復元
    fy_deliveryModelTool_reselectPreviousItems($selItems, "uTsl_local_fy_deliveryModelTool");

    // ファイル情報更新
    fy_deliveryModelTool_refreshFileInfo("local");
}

///////////////////////////////////////////////////////
// ユーザーリスト更新
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_refreshUserList()
{
    if(`optionVar -q "ov_deliveryEnabled_fy_deliveryModelTool"` == false)
    {
        return;
    }

    // 受け渡し用ルートパス
    global string $DELIVERYROOTPATH_FY_DELIVERYMODELTOOL;

    // 現在選択している項目
    string $selItems[] = `textScrollList -q -si uTsl_users_fy_deliveryModelTool`;

    // 受け渡し用リストの内容を一旦クリア
    textScrollList -e -removeAll uTsl_users_fy_deliveryModelTool;

    // 受け渡しフォルダ以下にあるフォルダのリストを取得
    string $fileList[] = `getFileList -fld $DELIVERYROOTPATH_FY_DELIVERYMODELTOOL`;

    // ツール用のフォルダがあるフォルダリスト
    string $folderList[];

    string $i;

    // 共有用ユーザー
    string $sharedUserNames[];
    string $sharedUserUniqueTags[];

    // このツール用のフォルダがあるフォルダを取得してリストに項目として追加
    for($i in $fileList)
    {
        // フォルダ名がfrom_ から始まる場合
        if(startsWith($i, "from_"))
        {
            // フォルダ名から名前を取得
            string $uniqueTag = substituteAllString($i, "from_", "");

            string $deliveryFolder = fy_deliveryModelTool_getUserFolder($uniqueTag);

            // 受け渡し用フォルダが存在すれば
            if(`filetest -d $deliveryFolder`)
            {
                // 名前設定ファイル
                string $nameFile = $deliveryFolder + "name.txt";

                string $name;

                if(`filetest -f $nameFile`)
                {
                    $name = `freadAllText($nameFile)`;
                }
                else
                {
                    $name = $uniqueTag;
                }

                if(`gmatch $name "*共有*"`)
                {
                    $sharedUserNames[`size($sharedUserNames)`] = $name;
                    $sharedUserUniqueTags[`size($sharedUserUniqueTags)`] = $uniqueTag;
                }
                else
                {
                    textScrollList -e
                        -append $name
                        -uniqueTag $uniqueTag
                        uTsl_users_fy_deliveryModelTool;
                }
            }
        }
    }

    int $index;
    string $sharedUserName;

    for($sharedUserName in $sharedUserNames)
    {
        textScrollList -e
            -appendPosition ($index+1) $sharedUserName
            -uniqueTag $sharedUserUniqueTags[$index]
            uTsl_users_fy_deliveryModelTool;

        $index += 1;
    }

    // 選択を復元
    fy_deliveryModelTool_reselectPreviousItems($selItems, "uTsl_users_fy_deliveryModelTool");
}

///////////////////////////////////////////////////////
// 「送る」リスト更新
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_refreshSendList()
{
    // リストの内容を一旦クリア
    textScrollList -e -removeAll uTsl_send_fy_deliveryModelTool;

    // 現在の選択を取得
    string $sel[] = `ls -sl -o`;

    string $elm;

    for($elm in $sel)
    {
        textScrollList -e -a $elm uTsl_send_fy_deliveryModelTool;
    }
}

///////////////////////////////////////////////////////
// 「受け取る」リスト更新
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_refreshRecieveList()
{
    // 現在選択している項目
    string $selItems[] = `textScrollList -q -si uTsl_recieve_fy_deliveryModelTool`;

    // リストの内容を一旦クリア
    textScrollList -e -removeAll uTsl_recieve_fy_deliveryModelTool;

    string $selUsers[] = `textScrollList -q -selectUniqueTagItem uTsl_users_fy_deliveryModelTool`;

    string $selUser;

    for($selUser in $selUsers)
    {
        // ユーザー表示名取得
        string $selUserName = `fy_deliveryModelTool_getUserName($selUser)`;

        // 受け取りフォルダ取得
        string $recieveFolders[] = `fy_deliveryModelTool_getRecieveFolders({$selUser})`;

        string $recieveFolder;

        for($recieveFolder in $recieveFolders)
        {
            string $fileFolders[] = `getFileList -fld $recieveFolder`;

            string $fileFolder;

            for($fileFolder in $fileFolders)
            {
                string $filePath = $recieveFolder + $fileFolder + "/" + $fileFolder + ".ma";

                if(`filetest -f $filePath`)
                {
                    textScrollList
                        -e
                        -append ("from: " + $selUserName + "     " + basename($filePath, ""))
                        -uniqueTag $filePath
                        uTsl_recieve_fy_deliveryModelTool;
                }
            }
        }
    }

    // 選択を復元
    fy_deliveryModelTool_reselectPreviousItems($selItems, "uTsl_recieve_fy_deliveryModelTool");

    // ファイル情報更新
    fy_deliveryModelTool_refreshFileInfo("recieve");
}

///////////////////////////////////////////////////////
// 「送ったデータ」リスト更新
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_refreshSentList()
{
    // 現在選択している項目
    string $selItems[] = `textScrollList -q -si uTsl_sent_fy_deliveryModelTool`;

    // リストの内容を一旦クリア
    textScrollList -e -removeAll uTsl_sent_fy_deliveryModelTool;

    string $selUsers[] = `textScrollList -q -selectUniqueTagItem uTsl_users_fy_deliveryModelTool`;
    string $selUser;

    for($selUser in $selUsers)
    {
        // ユーザー表示名取得
        string $selUserName = `fy_deliveryModelTool_getUserName($selUser)`;

        // 送り先フォルダ取得
        string $sendFolder[] = `fy_deliveryModelTool_getSendFolders({$selUser})`;

        // 送り先フォルダにあるファイルとフォルダ
        string $fileFolders[] = `getFileList -fld $sendFolder[0]`;

        string $fileFolder;

        for($fileFolder in $fileFolders)
        {
            // 受け取るファイル名
            string $filePath = $sendFolder[0] + $fileFolder + "/" + $fileFolder + ".ma";

            // 受け取るファイルが存在すればテキストスクロールリストに追加
            if(`filetest -f $filePath`)
            {
                textScrollList
                    -e
                    -append ("to: " + $selUserName + "     " + basename($filePath, ""))
                    -uniqueTag $filePath
                    uTsl_sent_fy_deliveryModelTool;
            }
        }
    }

    // 選択を復元
    fy_deliveryModelTool_reselectPreviousItems($selItems, "uTsl_sent_fy_deliveryModelTool");

    // ファイル情報更新
    fy_deliveryModelTool_refreshFileInfo("send");
}

///////////////////////////////////////////////////////
// 全てのリスト更新
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_refreshAllList()
{
    fy_deliveryModelTool_refreshLocalList;
    fy_deliveryModelTool_refreshUserList;

    fy_deliveryModelTool_refreshSendList;
    fy_deliveryModelTool_refreshRecieveList;
    fy_deliveryModelTool_refreshSentList;
}

///////////////////////////////////////////////////////
// ファイル情報更新
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_refreshFileInfo(string $type)
{
    // 日時
    string $date;

    // ファイルサイズ
    string $size;

    // 説明
    string $description;

    // サムネイルパス
    string $thumbnailPath;

    string $uTxt_date;
    string $uTxt_size;
    string $uTxt_description;
    string $uImg_thumbnail;

    if($type == "send")
    {
        $uTxt_date = "uTxt_sentDate_fy_deliveryModelTool";
        $uTxt_size = "uTxt_sentFileSize_fy_deliveryModelTool";
        $uTxt_description = "uTxt_sentDescription_fy_deliveryModelTool";
        $uImg_thumbnail = "uImg_sent_fy_deliveryModelTool";
    }
    else if($type == "recieve")
    {
        $uTxt_date = "uTxt_recieveDate_fy_deliveryModelTool";
        $uTxt_size = "uTxt_recieveFileSize_fy_deliveryModelTool";
        $uTxt_description = "uTxt_recieveDescription_fy_deliveryModelTool";
        $uImg_thumbnail = "uImg_recieve_fy_deliveryModelTool";
    }
    else if($type == "local")
    {
        $uTxt_date = "uTxt_localDate_fy_deliveryModelTool";
        $uTxt_size = "uTxt_localFileSize_fy_deliveryModelTool";
        $uTxt_description = "uTxt_localDescription_fy_deliveryModelTool";
        $uImg_thumbnail = "uImg_local_fy_deliveryModelTool";
    }
    else
    {
        return;
    }

    // 対象のテキストスクロールリストの名前
    string $tsl;

    if($type == "recieve")
    {
        $tsl = "uTsl_recieve_fy_deliveryModelTool";
    }
    else if($type == "send")
    {
        $tsl = "uTsl_sent_fy_deliveryModelTool";
    }
    else if($type == "local")
    {
        $tsl = "uTsl_local_fy_deliveryModelTool";
    }
    else
    {
        return;
    }

     // モジュールインポート
    python("import mtk3d.maya.env.file.functions as envfi");

    // ファイルパスを取得
    string $filePaths[] = `textScrollList -q -selectUniqueTagItem $tsl`;

    if(`size($filePaths)` == 1)
    {
        // ファイルが存在する場合
        if(`filetest -f $filePaths[0]`)
        {
            // タイムスタンプ取得
            $date = `python("envfi.getTimeStampStr('" + $filePaths[0] + "')")`;

            // ファイルサイズ取得(.ma)
            $size = `python("envfi.getSizeStr('" + $filePaths[0] + "', )")` + " (.ma)";

            // テクスチャフォルダパス
            string $texFolder = dirname($filePaths[0]) + "/texture";

            if(`filetest -d $texFolder`)
            {
                $size = $size + "\n" + `python("envfi.getSizeStr('" + $texFolder + "', )")` + " (texture)";
            }


            // 説明ファイルパス
            string $descriptionFile = substituteAllString($filePaths[0], ".ma", ".txt");

            // 説明取得
            if(`filetest -f $descriptionFile`)
            {
                $description = `freadAllText($descriptionFile)`;
            }

            // サムネイルファイルパス
            $thumbnailPath = substituteAllString($filePaths[0], ".ma", ".jpg");

            // サムネイル
            if(`filetest -f $thumbnailPath` == false)
            {
                $thumbnailPath = "Z:/mtk/tools/maya/modules/mtk3d/icons/fy_deliveryModelTool/noThumbnail.png";
            }
        }
        else
        {
            $date = "ファイルが存在しません";
            $size = "ファイルが存在しません";
            $description = "ファイルが存在しません";
            $thumbnailPath = "Z:/mtk/tools/maya/modules/mtk3d/icons/fy_deliveryModelTool/noThumbnail.png";
        }
    }
    else if(`size($filePaths)` >= 2)
    {
        $date = "複数選択";
        $size = "複数選択";
        $description = "複数選択";
        $thumbnailPath = "Z:/mtk/tools/maya/modules/mtk3d/icons/fy_deliveryModelTool/noThumbnail.png";
    }
    else
    {
        $thumbnailPath = "Z:/mtk/tools/maya/modules/mtk3d/icons/fy_deliveryModelTool/noThumbnail.png";
    }

    // 表示更新
    text -e -l $date $uTxt_date;
    text -e -l $size $uTxt_size;
    text -e -l $description $uTxt_description;
    image -e -i $thumbnailPath $uImg_thumbnail;
}


///////////////////////////////////////////////////////
// リスト更新前に選択していた項目を再選択
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_reselectPreviousItems(string $items[], string $listName)
{
    // リストのすべての項目を取得
    string $allItems[] = `textScrollList -q -allItems $listName`;

    string $item;

    string $cmd;

    for($item in $items)
    {
        // 現在の項目に以前に選択していた項目がある場合
        if(stringArrayContains($item, $allItems))
        {
            $cmd = $cmd + " -selectItem \"" + $item + "\"";
        }
    }

    if($cmd != "")
    {
        $cmd = "textScrollList -e" + $cmd + " " +$listName;

        eval $cmd;
    }
}


///////////////////////////////////////////////////////
// ユーザー選択した時のコールバックコマンド
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_selectUserCommand()
{
    // 「受け取る」 リスト更新
    fy_deliveryModelTool_refreshRecieveList;

    // 「送ったデータ」 リスト更新
    fy_deliveryModelTool_refreshSentList;
}

///////////////////////////////////////////////////////
// ローカルエクスポート処理
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_export()
{
    // 現在の選択を取得
    string $sel[] = `ls -sl -o`;

    // 再選択
    select -r $sel;

    // 何も選択されていなければ、確認ダイアログを出して終了
    if (size($sel) == 0)
    {
        confirmDialog -title "Delivery Model Tool" -icn "warning" -button "OK" -m "エクスポートするオブジェクトが選択されていません。";;
        return;
    }

    // エクスポートするファイル名
    string $tokens[] = stringToStringArray($sel[0], "|");
    string $fileName = $tokens[`size($tokens)` - 1];

    string $uiCmd = "fy_deliveryModelTool_sendDialogUI(\"" + stringArrayToString({"ローカル"}, "\\n") + "\",\"" + stringArrayToString($sel, "\\n") + "\",\"" + "" + "\",\"" + $fileName + "\")";

    // ダイアログ表示
    string $result = `layoutDialog -title "Delivery Model Tool" -ui $uiCmd`;

    if($result == "dismiss")
    {
        print "// キャンセルしました。\n";
        return;
    }

    string $resultArray[] = stringToStringArray($result, "\n");

    // ファイル名
    $fileName = $resultArray[0];

    // 戻り値配列からファイル名を削除
    stringArrayRemoveAtIndex(0, $resultArray);

    // ローカルの書き出し先フォルダ名
    global string $LOCALEXPORTPATH_FY_DELIVERYMODELTOOL;

    // エクスポートするファイルのフルパスを設定
    string $expFilePath = $LOCALEXPORTPATH_FY_DELIVERYMODELTOOL + $fileName + ".ma";

    // すでにファイルが存在するなら
    if(`filetest -f $expFilePath`)
    {
        string $result =
        `confirmDialog
            -title "Delivery Model Tool"
            -icn "question"
            -message "すでにファイルが存在します。上書きしますか？"
            -button "上書き"
            -button "キャンセル"
            -defaultButton "上書き"
            -cancelButton "キャンセル"
            -dismissString "キャンセル"`
            ;

        // キャンセルしたら終了
        if ($result == "キャンセル")
        {
            print "// キャンセルしました。\n";
            return;
        }
    }

    // モデルエクスポート
    file -force -options "v=0" -typ "mayaAscii" -pr -es $expFilePath;

    // 説明ファイル名
    string $descriptionFile = substituteAllString($expFilePath, ".ma", ".txt");

    // 説明を復元
    string $description = stringArrayToString($resultArray, "\n");

    // 説明ファイル書き込み
    if(fwriteAllText($descriptionFile, $description) != 0)
    {
        confirmDialog
            -t "Delivery Model Tool"
            -m "説明を保存できませんでした。"
            -b "OK"
            -icn "warning"
            ;
    }

    // サムネイルファイル名（拡張子なし）
    string $thumbnailFile = substituteAllString($expFilePath, ".ma", "");

    // サムネイル作成
    fy_captureThumnail($sel, 180, 180, $thumbnailFile);

    // ログ表示
    print ("// " + $expFilePath + " にエクスポートしました。\n");

    // 再選択
    select -r $sel;

    // リストを更新
    fy_deliveryModelTool_refreshLocalList;
}


///////////////////////////////////////////////////////
//    インポート処理
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_import()
{
    // ローカル用リストで選択している項目
    string $filePaths[] = `textScrollList -q -selectUniqueTagItem uTsl_local_fy_deliveryModelTool`;

    // 何も選択されていない場合
    if(`size($filePaths)` == 0)
    {
        // 確認ダイアログを出して終了
        confirmDialog -title "Delivery Model Tool" -icn "warning" -button "OK" -m "インポートするファイルがリストで選択されていません。";
        return;
    }

    string $filePath;
    string $message = "以下のファイルをインポートします。\n\n";

    for($filePath in $filePaths)
    {
        $message = $message + "" + basename($filePath, "") + "\n";
    }

    string $result =
    `confirmDialog
        -title "Delivery Model Tool"
        -icn "information"
        -message $message
        -button "インポート"
        -button "キャンセル"
        -defaultButton "インポート"
        -cancelButton "キャンセル"
        -dismissString "キャンセル"`
        ;

    if ($result == "キャンセル")
    {
        print "// キャンセルしました。\n";
        return;
    }

    // 現在の全てのルートノードを取得
    string $nodes[] = `ls "|*"`;

    for($filePath in $filePaths)
    {
        // ファイルが存在しないなら
        if(`filetest -f $filePath` == false)
        {
            // 確認ダイアログを出して終了
            confirmDialog -title "Delivery Model Tool" -icn "critical" -button "OK" -m ($filePath + " は存在しません。");

            // リストを更新
            fy_deliveryModelTool_refreshLocalList;
        }
        else
        {
            // ファイルインポート
            file
                -import
                -ignoreVersion
                -type "mayaAscii"
                -mergeNamespacesOnClash false
                -renamingPrefix "imported"
                -options "v=0;"
                -pr
                $filePath;

            // ログを表示
            print ("// " + $filePath + " をインポートしました。\n");
        }
    }

    // インポート後の全てのルートノードを取得
    string $importNodes[] = `ls "|*"`;

    // インポートされたルートノードのみを選択
    $importNodes = stringArrayRemoveExact($nodes, $importNodes);

    // インポートしたノードを選択
    select -r $importNodes;
}


///////////////////////////////////////////////////////
//    削除処理
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_delete()
{
    // リストで選択しているファイル名を取得
    string $filePaths[] = `textScrollList -q -selectUniqueTagItem uTsl_local_fy_deliveryModelTool`;

    // 何も選択していない場合
    if (`size($filePaths)` == 0)
    {
        // 確認ダイアログを出して終了
        confirmDialog -title "Delivery Model Tool" -icn "warning" -button "OK" -m "削除するファイルがリストで選択されていません。";
        return;
    }

    string $filePath;
    string $message = "以下のファイルを削除します。\n\n";

    for($filePath in $filePaths)
    {
        $message = $message + basename($filePath, "") + "\n";
    }

    // 確認ダイアログ
    string $result =
    `confirmDialog
        -title "Delivery Model Tool"
        -icn "information"
        -message $message
        -button "削除"
        -button "キャンセル"
        -defaultButton "削除"
        -cancelButton "キャンセル"
        -dismissString "キャンセル"`
        ;

    if ($result == "キャンセル")
    {
        print "// キャンセルしました。\n";
        return;
    }

    for($filePath in $filePaths)
    {
        // ファイルが存在しないなら
        if(`filetest -f $filePath` == false)
        {
            // 確認ダイアログを出して終了
            confirmDialog -title "Delivery Model Tool" -icn "warning" -button "OK" -m ($filePath + " は存在しません。");
        }
        else
        {
            // ファイル削除
            sysFile -del $filePath;

            // 説明ファイル
            string $descriptionFile = substituteAllString($filePath, ".ma", ".txt");

            if(`filetest -f $descriptionFile`)
            {
                // 説明ファイル削除
                sysFile -del $descriptionFile;
            }

            // サムネイル
            string $thumbnailFile = substituteAllString($filePath, ".ma", ".jpg");

            if(`filetest -f $thumbnailFile`)
            {
                // サムネイル削除
                sysFile -del $thumbnailFile;
            }

            // ログ表示
            print ("// " + $filePath + " を削除しました。\n");
        }
    }

    // リストを更新
    fy_deliveryModelTool_refreshLocalList;
}

///////////////////////////////////////////////////////
// 送る
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_send()
{
    // 送り先のユーザー名を取得
    string $destinationUsers[] = `textScrollList -q -selectUniqueTagItem uTsl_users_fy_deliveryModelTool`;
    string $destinationUserNames[] = `textScrollList -q -selectItem uTsl_users_fy_deliveryModelTool`;

    // 現在の選択を取得
    string $sel[] = `ls -sl -o`;

    // 再選択
    select -r $sel;

    // 何も選択されていなければ、確認ダイアログを出して終了
    if (`size($sel)` == 0)
    {
        confirmDialog -title "Delivery Model Tool" -icn "warning" -m "送るオブジェクトが選択されていません。" -b "OK";
        return;
    }

    // リストで送り先ユーザー名が選択されていない場合
    if (`size($destinationUsers)` == 0)
    {
        confirmDialog -title "Delivery Model Tool" -icn "warning" -m "送り先のユーザーが選択されていません。" -b "OK";
        return;
    }

    // エクスポートするファイル名
    string $tokens[] = stringToStringArray($sel[0], "|");
    string $fileName = $tokens[`size($tokens)` - 1];

    // 送る内容
    string $contents = stringArrayToString($sel, "\\n");

    // 送るテクスチャ
    string $textures[] = fy_getTextures_fromObjects("basename", $sel);

    string $uiCmd = "fy_deliveryModelTool_sendDialogUI(\"" + stringArrayToString($destinationUserNames, "\\n") + "\",\"" + stringArrayToString($sel, "\\n") + "\",\"" + stringArrayToString($textures, "\\n") + "\",\"" + $fileName + "\")";

    // ダイアログ表示
    string $result = `layoutDialog -title "Delivery Model Tool" -ui $uiCmd`;

    if($result == "dismiss")
    {
        print "// キャンセルしました。\n";
        return;
    }

    string $resultArray[] = stringToStringArray($result, "\n");

    // ファイル名
    $fileName = $resultArray[0];

    // 戻り値配列からファイル名を削除
    stringArrayRemoveAtIndex(0, $resultArray);

    // 送り先フォルダー取得
    string $sendFolders[] = `fy_deliveryModelTool_getSendFolders($destinationUsers)`;

    string $sendFolder;

    int $index;

    for($sendFolder in $sendFolders)
    {
        $sendFolder = $sendFolder + $fileName + "/";

        // 送るファイルのフルパスを設定
        string $sendFile = $sendFolder + $fileName + ".ma";

        // テクスチャフォルダ
        string $texFolder = $sendFolder + "texture/";

        // 送り先のフォルダが存在しなければ
        if (`filetest -d $sendFolder` == 0)
        {
            // フォルダ作成
            if(`sysFile -makeDir $sendFolder` == false)
            {
                confirmDialog -t "Delivery Model Tool" -icn "critical" -m "送り先フォルダが作成できませんでした。" -b "OK";
                return;
            }
        }
        // ファイルが既に存在する場合
        else if(`filetest -f $sendFile`)
        {
            string $message = $destinationUserNames[$index] + " さん宛ての、" + basename($sendFile, "") + " はすでに存在します。\n\n上書きしますか？";

            // 上書き確認
            string $result =
            `confirmDialog
                -title "Delivery Model Tool"
                -icn "question"
                -message $message
                -button "上書き"
                -button "スキップ"
                -button "キャンセル"
                -defaultButton "上書き"
                -cancelButton "キャンセル"
                -dismissString "キャンセル"`
                ;

            if($result == "スキップ")
            {
                print "// スキップしました。\n";

                $index += 1;

                continue;
            }
            else if ($result == "キャンセル")
            {
                print "// キャンセルしました。\n";
                return;
            }

            // テクスチャフォルダが存在すれば削除
            if(`filetest -d $texFolder`)
            {
                if(fy_deliveryModelTool_deleteFolder($texFolder) == false)
                {
                    confirmDialog -t "Delivery Model Tool" -icn "critical" -m "以前に送ったテクスチャファイルが削除できませんでした。" -b "OK";
                    return;
                }
            }
        }

        // モデルエクスポート
        file -force -options "v=0" -typ "mayaAscii" -pr -es $sendFile;

        // 使用されているfile ノードを取得
        string $fileNodes[] = fy_getFileNodes_fromObjects($sel);

        // 使用しているテクスチャがある場合
        if(`size($fileNodes)` != 0)
        {
            // フォルダ作成
            sysFile -makeDir $texFolder;

            string $fileNode;

            global string $gMainProgressBar;

            // プログレスバー開始
            progressBar -edit
                -beginProgress
                -isInterruptable false
                -status "テクスチャファイルをコピー中..."
                -maxValue `size($fileNodes)`
                $gMainProgressBar;

            for($fileNode in $fileNodes)
            {
                string $srcTexturePath = `getAttr ($fileNode + ".fileTextureName")`;

                string $dstTexturePath = $texFolder + basename($srcTexturePath, "");

                sysFile -copy $dstTexturePath $srcTexturePath;

                progressBar -e -step 1 -status (basename($srcTexturePath, "") + " をコピー中...") $gMainProgressBar;
            }

            progressBar -edit -endProgress $gMainProgressBar;
        }

        // 説明ファイル名
        string $descriptionFile = substituteAllString($sendFile, ".ma", ".txt");

        // 説明を復元
        string $description = stringArrayToString($resultArray, "\n");

        // 説明ファイル書き込み
        if(fwriteAllText($descriptionFile, $description) != 0)
        {
            confirmDialog
                -t "Delivery Model Tool"
                -m "説明を保存できませんでした。"
                -b "OK"
                -icn "warning"
                ;
        }

        // サムネイルファイル名（拡張子なし）
        string $thumbnailFile = substituteAllString($sendFile, ".ma", "");

        // サムネイル作成
        fy_captureThumnail($sel, 180, 180, $thumbnailFile);

        // ログ表示
        print ("// " + $sendFile + " にエクスポートしました。\n");

        $index += 1;
    }

    fy_deliveryModelTool_sendLogWindow(($fileName + ".ma"), $textures);

    // リストを更新
    fy_deliveryModelTool_refreshRecieveList;
    fy_deliveryModelTool_refreshSentList;
}

///////////////////////////////////////////////////////
// 「送る」ダイアログ
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_sendDialogUI(string $destinationUserNames, string $contents, string $textures, string $fileName)
{
    // このダイアログのフォームレイアウトを取得
    string $form= `setParent -q`;

    formLayout -e $form;
        string $CL = `columnLayout -adj on`;
            text -l "\nファイル名と説明を入力してください。\n\n";

            rowColumnLayout -nc 2 -adj 2 -cal 1 "right" -cal 2 "left" -rs 1 8;

            text -l "送り先 :  ";
            text -l $destinationUserNames;

            text -l "内容 :  ";
            text -l $contents;

            if($textures != "")
            {
                text -l "テクスチャ :  ";
                text -l $textures;
            }


            text -l "ファイル名 :  ";
            rowLayout -nc 2 -adj 1;
            string $TF1 = `textField -text $fileName -w 150 uTf_fileName_fy_deliveryModelTool`;
            text -l " .ma  ";
            setParent..;

            text -l "説明 :  ";

            string $TF2 = `scrollField -wordWrap true -text "" -w 150 -h 64 uTf_description_fy_deliveryModelTool`;
            setParent ..;
        setParent ..;

        string $BtnOK = `button -l "送る" -c "fy_deliveryModelTool_sendDialogUI_btnCallback"`;
        string $BtnCancel = `button -l "キャンセル" -c "layoutDialog -dismiss \"dismiss\""`;

    int $spacer = 16;

    formLayout -e
        -attachForm $CL "top" $spacer
        -attachForm $CL "left" $spacer
        -attachForm $CL "right" $spacer
        -attachControl $CL "bottom" 16 $BtnOK

        -attachForm $BtnOK "left" $spacer
        -attachForm $BtnOK "bottom" 8
        -attachForm $BtnCancel "right" $spacer
        -attachForm $BtnCancel "bottom" 8

        -attachPosition $BtnOK "right" 4 50
        -attachPosition $BtnCancel "left" 4 50

        $form;
}

///////////////////////////////////////////////////////
// 「送る」ダイアログ 決定コールバック
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_sendDialogUI_btnCallback()
{
    // ファイル名を取得
    string $fileName = `textField -q -text uTf_fileName_fy_deliveryModelTool`;

    // 説明を取得
    string $description = `scrollField -q -text uTf_description_fy_deliveryModelTool`;

    // ファイル名が入力されていなかったら戻る
    if($fileName == "")
    {
        return;
    }

    // ファイル名のチェック
    if(`isValidObjectName($fileName)` == false)
    {
        confirmDialog
            -t "Delivery Model Tool"
            -m "ファイル名にはアルファベット、数字、アンダースコア以外は使用できません。"
            -icn "warning"
            -b "OK"
            ;
        return;
    }

    layoutDialog -dismiss ($fileName + "\n" + $description);
}

///////////////////////////////////////////////////////
// 送る エラーダイアログ
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_sendErrorDialog(string $message)
{
    confirmDialog
        -t "Delivery Model Tool"
        -m $message
        -icn "critical"
        -b "OK"
        ;
}

///////////////////////////////////////////////////////
// 受け取る
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_recieve()
{
    // 受け取るファイルパスを取得
    string $filePaths[] = `textScrollList -q -selectUniqueTagItem uTsl_recieve_fy_deliveryModelTool`;

    // 受け取るファイルが選択されていない場合
    if (`size($filePaths)` == 0)
    {
        confirmDialog -title "Delivery Model Tool" -icn "warning" -m "受け取るデータが選択されていません。" -b "OK";
        return;
    }

    // 差出ユーザー名を取得
    string $destinationUserNames[] = `textScrollList -q -selectItem uTsl_users_fy_deliveryModelTool`;

    string $message;

    // 差出人が一人の場合
    if(`size($destinationUserNames)` == 1)
    {
        $message = $destinationUserNames[0] + " さんから以下のデータを受け取ります。\n\n";
    }
    // 差出人が複数の場合
    else
    {
        string $destinationUserName;

        for($destinationUserName in $destinationUserNames)
        {
            $message = $message + $destinationUserName + " さん\n";
        }

        $message = $message + "\n上記メンバーから以下のデータを受け取ります。\n\n";
    }

    string $filePath;

    for($filePath in $filePaths)
    {
        $message = $message + basename($filePath, "") + "\n";
    }

    // 確認ダイアログ
    string $result =
    `confirmDialog
        -title "Delivery Model Tool"
        -m $message
        -icn "information"
        -b "受け取る"
        -b "キャンセル"
        -defaultButton "受け取る"
        -cancelButton "キャンセル"
        -dismissString "キャンセル"
        `;

    if ($result == "キャンセル")
    {
        print "// キャンセルしました。\n";
        return;
    }

    // 現在の全てのルートノード
    string $nodes[];

    // インポートされたすべてのノード
    string $allImportedNodes[];

    // 受け取ったテクスチャ
    string $allRecievedTextures[];

    for($filePath in $filePaths)
    {
        // 送られたファイルが存在すれば
        if(`filetest -f $filePath`)
        {
            // テクスチャフォルダ
            string $texFolder = dirname($filePath) + "/texture/";

            // テクスチャファイル
            string $texFileNames[] = `getFileList -folder $texFolder`;

            // テクスチャ受け取りフォルダ
            string $texRecieveFolder;

            // 送られたテクスチャファイルが存在する場合
            if(`size($texFileNames)` != 0)
            {
                string $uiCmd = "fy_deliveryModelTool_selectTexFolderDialogUI(\"" + basename($filePath, "") + "\")";

                // ダイアログ表示
                $texRecieveFolder = `layoutDialog -title "Delivery Model Tool" -ui $uiCmd`;

                // テクスチャファイルを受け取らない
                if($texRecieveFolder == "dismiss")
                {
                    $texRecieveFolder = "";

                    print "// テクスチャファイルの受け取りをスキップしました。\n";
                }
                // テクスチャファイルを受け取る
                else
                {
                    global string $gMainProgressBar;

                    // プログレスバー開始
                    progressBar -edit
                        -beginProgress
                        -isInterruptable false
                        -status "テクスチャファイルをコピー中..."
                        -maxValue `size($texFileNames)`
                        $gMainProgressBar;

                    string $texFileName;

                    for($texFileName in $texFileNames)
                    {
                        sysFile -copy ($texRecieveFolder + $texFileName) ($texFolder + $texFileName);

                        $allRecievedTextures[`size($allRecievedTextures)`] = $texFileName;

                        progressBar -e -step 1 -status ($texFileName + " をコピー中...") $gMainProgressBar;
                    }

                    progressBar -edit -endProgress $gMainProgressBar;
                }
            }

            // 現在のすべてのルートノードを取得
            $nodes = `ls "|*"`;

            // ファイルインポート
            file -i -iv $filePath;

            print ("// " + $filePath + " をインポートしました。\n");

            // インポート後の全てのルートノードを取得
            string $importedNodes[] = `ls "|*"`;

            // インポートされたルートノードのみを取得
            $importedNodes = stringArrayRemoveExact($nodes, $importedNodes);

            if(`size($importedNodes)` != 0)
            {
                // インポートしたすべてのノードリストに追加
                $allImportedNodes = stringArrayCatenate($allImportedNodes, $importedNodes);

                // テクスチャを受け取っていれば
                if($texRecieveFolder != "")
                {
                    // 使用しているファイルノード取得
                    string $fileNodes[] = fy_getFileNodes_fromObjects($importedNodes);

                    string $fileNode;

                    // テクスチャパスを差し替え
                    for($fileNode in $fileNodes)
                    {
                        string $texPath = `getAttr ($fileNode + ".fileTextureName")`;

                        string $newTexPath = $texRecieveFolder + basename($texPath, "");

                        setAttr -type "string" ($fileNode + ".fileTextureName") $newTexPath;
                    }
                }
            }
        }
        else
        {
            // 確認ダイアログを出して終了
            confirmDialog -t "Delivery Model Tool" -icn "critical" -m (basename($filePath, "") + " は見つからないためスキップしました。") -b "OK";

            print ("// " + $filePath + " は見つからないためスキップしました。\n");
        }
    }

    if(`size($allImportedNodes)` != 0)
    {
        // インポートされたノードを選択
        select -r $allImportedNodes;

        // ログウィンドウ表示
        fy_deliveryModelTool_recieveLogWindow($allImportedNodes, $allRecievedTextures);
    }
}

///////////////////////////////////////////////////////
// テクスチャ受け取るフォルダ選択ダイアログ
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_selectTexFolderDialogUI(string $fileName)
{
    // シーンパス取得
    string $path = `python("from mtk.utils import getCurrentSceneFilePath; getCurrentSceneFilePath()")`;
    // string $path = `file -q -sceneName`;

    if($path != "")
    {
        // シーンフォルダ
        $path = dirname($path);

        // テクスチャフォルダ
        $path = dirname($path) + "/texture";

        // テクスチャフォルダが存在しなければ
        if(`filetest -d $path` == false)
        {
            $path = dirname($path);
        }
    }

    // このダイアログのフォームレイアウトを取得
    string $form= `setParent -q`;

    formLayout -e $form;
        string $CL = `columnLayout -adj on`;
            text -l ($fileName + " で使用されている、テクスチャファイルを受け取るフォルダを指定してください。\n\n");

            rowColumnLayout -nc 2 -adj 2 -cal 1 "right" -cal 2 "left" -rs 1 8;

            text -l "フォルダ :  ";
            rowLayout -nc 2 -adj 1;
            textField -fileName $path -w 150 uTf_texFolder_fy_deliveryModelTool;
            symbolButton -image "fileOpen.png" -c "fy_deliveryModelTool_selectTexFolderFileDialog2";
            setParent..;

            setParent ..;
        setParent ..;

        string $BtnOK = `button -l "OK" -c "fy_deliveryModelTool_selectTexFolderDialogUI_okCallback"`;
        string $BtnCancel = `button -l "受け取らない" -c "layoutDialog -dismiss \"dismiss\""`;

    int $spacer = 16;

    formLayout -e
        -attachForm $CL "top" $spacer
        -attachForm $CL "left" $spacer
        -attachForm $CL "right" $spacer
        -attachControl $CL "bottom" 16 $BtnOK

        -attachForm $BtnOK "left" $spacer
        -attachForm $BtnOK "bottom" 8
        -attachForm $BtnCancel "right" $spacer
        -attachForm $BtnCancel "bottom" 8

        -attachPosition $BtnOK "right" 4 50
        -attachPosition $BtnCancel "left" 4 50

        $form;
}

///////////////////////////////////////////////////////
// テクスチャ受け取るフォルダ選択ダイアログ
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_selectTexFolderDialogUI_okCallback()
{
    // フォルダ名を取得
    string $folderPath = `textField -q -fileName uTf_texFolder_fy_deliveryModelTool`;

    // フォルダ名が入力されていなかったら戻る
    if($folderPath == "")
    {
        return;
    }

    // フォルダが存在するか
    if(`filetest -d $folderPath` == false)
    {
        confirmDialog
            -t "Delivery Model Tool"
            -m "指定されたフォルダは存在しません。"
            -icn "warning"
            -b "OK"
            ;
        return;
    }

    if(endsWith($folderPath, "/") == false)
    {
        $folderPath = $folderPath + "/";
    }

    layoutDialog -dismiss ($folderPath);
}

//===============================================
// テクスチャ受け取るフォルダ選択ダイアログ2
//===============================================
global proc fy_deliveryModelTool_selectTexFolderFileDialog2()
{
    string $path = `textField -q -fileName "uTf_texFolder_fy_deliveryModelTool"`;

    if (!`filetest -d $path`)
    {
        $path = "";
    }

    string $selPath[] = `fileDialog2 -ds 2 -cap "フォルダを選択" -fm 3 -okc "選択" -dir $path`;

    if (size($selPath) != 0)
    {
        textField -e -fileName $selPath[0] "uTf_texFolder_fy_deliveryModelTool";
    }
}

///////////////////////////////////////////////////////
// データを削除
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_deleteDeliveryFiles(string $type)
{
    // 対象のリストの名前
    string $tsl;

    if($type == "recieve")
    {
        $tsl = "uTsl_recieve_fy_deliveryModelTool";
    }
    else if($type == "send")
    {
        $tsl = "uTsl_sent_fy_deliveryModelTool";
    }
    else
    {
        return;
    }

    // 削除するファイルパスを取得
    string $filePaths[] = `textScrollList -q -selectUniqueTagItem $tsl`;

    // 削除するファイルが選択されていない場合
    if (`size($filePaths)` == 0)
    {
        confirmDialog -title "Delivery Model Tool" -icn "warning" -m "削除するデータが選択されていません。" -b "OK";
        return;
    }

    string $message = "以下のデータを削除します。\n\n";

    string $filePath;

    for($filePath in $filePaths)
    {
        $message = $message + basename($filePath, "") + "\n";
    }


    // 確認ダイアログ
    string $result =
    `confirmDialog
        -title "Delivery Model Tool"
        -m $message
        -icn "information"
        -b "削除"
        -b "キャンセル"
        -defaultButton "削除"
        -cancelButton "キャンセル"
        -dismissString "キャンセル"
        `;

    if ($result == "キャンセル")
    {
        print "// キャンセルしました。\n";
        return;
    }

    for($filePath in $filePaths)
    {
        if(fy_deliveryModelTool_deleteFolder(`dirname($filePath)`))
        {
            print ("// " + $filePath + " を削除しました。\n");
        }
        else
        {
            print ("// " + $filePath + " は削除できませんでした。\n");
        }
    }

    // リストを更新
    fy_deliveryModelTool_refreshRecieveList;
    fy_deliveryModelTool_refreshSentList;
}

///////////////////////////////////////////////////////
// フォルダ削除
///////////////////////////////////////////////////////
global proc int fy_deliveryModelTool_deleteFolder(string $folderPath)
{
    string $cmd = "rmdir /s /q \"" + substituteAllString($folderPath, "/", "\\") + "\"";

    system($cmd);

    int $result = (`filetest -d $folderPath` == false);

    return $result;
}


///////////////////////////////////////////////////////
// 共有用ユーザーかどうか
///////////////////////////////////////////////////////
global proc int fy_deliveryModelTool_isSharedUser(string $user)
{
    // ユーザーの表示名を取得
    string $userName = `fy_deliveryModelTool_getUserName($user)`;

    // 共有用ユーザーかどうか
    int $isSharedUser = startsWith($userName, "【共有】");

    if($isSharedUser)
    {
        return true;
    }
    else
    {
        return false;
    }
}

///////////////////////////////////////////////////////
// ユーザー表示名を取得
///////////////////////////////////////////////////////
global proc string fy_deliveryModelTool_getUserName(string $user)
{
    // ユーザー名設定ファイル
    string $userNameFile = `fy_deliveryModelTool_getUserFolder($user)` + "name.txt";

    string $userName;

    if(`filetest -f $userNameFile`)
    {
        $userName = freadAllText($userNameFile);
    }
    else
    {
        $userName = $user;
    }

    return $userName;
}

///////////////////////////////////////////////////////
// ユーザーフォルダを取得
///////////////////////////////////////////////////////
global proc string fy_deliveryModelTool_getUserFolder(string $user)
{
    global string $DELIVERYROOTPATH_FY_DELIVERYMODELTOOL;

    return ($DELIVERYROOTPATH_FY_DELIVERYMODELTOOL + "from_" + $user + "/deliveryModelTool/");
}

///////////////////////////////////////////////////////
// 送り先フォルダを取得
///////////////////////////////////////////////////////
global proc string[] fy_deliveryModelTool_getSendFolders(string $destinationUsers[])
{
    string $sendFolders[];

    // 受け渡し用のルートフォルダ
    global string $DELIVERYROOTPATH_FY_DELIVERYMODELTOOL;

    // 受け渡し用のユーザールートフォルダ
    global string $DELIVERYUSERPATH_FY_DELIVERYMODELTOOL;

    string $user;

    for($user in $destinationUsers)
    {
        // 共有用ユーザーの場合
        if(`fy_deliveryModelTool_isSharedUser($user)`)
        {
            $sendFolders[`size($sendFolders)`] =$DELIVERYROOTPATH_FY_DELIVERYMODELTOOL + "from_" + $user + "/deliveryModelTool/from_" + `optionVar -q "ov_alphabetName_fy_deliveryModelTool"` + "/";
        }
        else
        {
            $sendFolders[`size($sendFolders)`] = $DELIVERYUSERPATH_FY_DELIVERYMODELTOOL + "to_" + $user + "/";
        }
    }

    //print "send : \n";
    //print $sendFolders;

    return $sendFolders;
}

///////////////////////////////////////////////////////
// 受け取り元フォルダを取得
///////////////////////////////////////////////////////
global proc string[] fy_deliveryModelTool_getRecieveFolders(string $destinationUsers[])
{
    string $recieveFolders[];

    // 受け渡し用のルートフォルダ
    global string $DELIVERYROOTPATH_FY_DELIVERYMODELTOOL;

    string $user;

    for($user in $destinationUsers)
    {
        // 共有用ユーザーの場合
        if(`fy_deliveryModelTool_isSharedUser($user)`)
        {
            string $userFolder = fy_deliveryModelTool_getUserFolder($user);

            string $files[] = `getFileList -folder $userFolder`;

            string $file;

            for($file in $files)
            {
                string $temp = $userFolder + $file + "/";

                if(`filetest -d $temp`)
                {
                    $recieveFolders[`size($recieveFolders)`] = $temp;
                }
            }
        }
        else
        {
            $recieveFolders[`size($recieveFolders)`] = fy_deliveryModelTool_getUserFolder($user) + "to_" + `optionVar -q "ov_alphabetName_fy_deliveryModelTool"` + "/";
        }
    }

    //print "recieve :\n";
    //print $recieveFolders;

    return $recieveFolders;
}

///////////////////////////////////////////////////////
// 一時フォルダを開く
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_openTempFolder()
{
    // ローカルの書き出し先フォルダ名
    global string $LOCALEXPORTPATH_FY_DELIVERYMODELTOOL;

    string $path = substituteAllString($LOCALEXPORTPATH_FY_DELIVERYMODELTOOL, "/", "\\");

    system("start explorer /root," + $path);
}

///////////////////////////////////////////////////////
// 受け渡しフォルダを開く
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_openDeliveryFolder(string $type)
{
    string $selFiles[];

    if($type == "send")
    {
        $selFiles = `textScrollList -q -selectUniqueTagItem uTsl_sent_fy_deliveryModelTool`;
    }
    else if($type == "recieve")
    {
        $selFiles = `textScrollList -q -selectUniqueTagItem uTsl_recieve_fy_deliveryModelTool`;
    }
    else
    {
        return;
    }

    string $selFile;

    for($selFile in $selFiles)
    {
        // ファイルが存在する場合
        if(`filetest -f $selFile`)
        {
            // フォルダパス取得
            string $folder = dirname($selFile);

            $folder = substituteAllString($folder, "/", "\\");
            system("start explorer /root," + $folder);
        }
        // ファイルが存在しない場合
        else
        {
            string $message = $selFile + "\n\nファイルが存在しません。";

            confirmDialog -t "Delivery Model Tool" -icn "warning" -m $message -b "OK";
        }
    }

    return;
}


///////////////////////////////////////////////////////
// 送るログウィンドウ
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_sendLogWindow(string $fileName, string $textures[])
{
    string $log = "以下の .ma ファイルを送りました。\n\n";

    $log = $log + $fileName + "\n";


    //string $log = $fileName + "\n";

    if(`size($textures)` != 0)
    {
        $log = $log + "\n\n以下のテクスチャを送りました。\n\n";

        $log = $log + stringArrayToString($textures, "\n");
    }

    confirmDialog -t "Delivery Model Tool" -icn "information" -m $log -b "OK";
}


///////////////////////////////////////////////////////
// 受け取りログウィンドウ
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_recieveLogWindow(string $objs[], string $textures[])
{
    string $log = "以下のノードがシーンにインポートされました。\n\n";

    string $obj;

    for($obj in $objs)
    {
        $log = $log + $obj + "\n";
    }

    if(`size($textures)` != 0)
    {
        $log = $log + "\n\n以下のテクスチャを受け取りました。\n\n";

        $log = $log + stringArrayToString($textures, "\n");
    }

    confirmDialog -t "Delivery Model Tool" -icn "information" -m $log -b "OK";
}

///////////////////////////////////////////////////////
// 送ったファイルの容量をチェック
///////////////////////////////////////////////////////
global proc fy_deliveryModelTool_checkSentDatasSize()
{
    // 受け渡し用のユーザーフォルダ
    global string $DELIVERYUSERPATH_FY_DELIVERYMODELTOOL;

    float $size = `python("envfi.getFolderSize('" + $DELIVERYUSERPATH_FY_DELIVERYMODELTOOL + "', )")`;

    $size = $size / 1024 / 1024 / 1024;

    if($size > 1.0)
    {
        $size = floor($size * 100) / 100;

        string $message = "ネットワークドライブに保存されている 送ったデータの合計サイズが1GB を超えています。\n\n現在 " + $size + " GB です。\n\n必要のないデータが残っている場合は削除してください。";

        confirmDialog -t "Delivery Model Tool" -icn "information" -m $message -b "OK";
    }

}

//fy_deliveryModelTool;