//===============================================
//
// アセットフォルダ作成ツール
//
//===============================================

global proc shr_createAssetFolders()
{
    //すでにウィンドウがあれば終了
    if (`window -exists uWnd_shr_createAssetFolders` == 1)
    {
        // deleteUI uWnd_shr_createAssetFolders;
        return;
    }

    // TA ツールログ送信
    shr_toolLog("Create Asset Folders", "", "launched.");

    source "shr_exportFbx";

    //プリファレンスに値が無ければデフォルト値を設定
    shr_createAssetFolders_setDefaultPreferences;

    window
        -title "Create Asset Folders"
        -resizeToFitChildren on
        -sizeable off
        -maximizeButton off
        -mb on
        uWnd_shr_createAssetFolders;

        // メニュー作成
        shr_createAssetFolders_createMenus;

    frameLayout -mw 4 -mh 4 -lv off ;
        columnLayout -adj on;

    		rowColumnLayout -nc 2 -adj 2 -columnAlign 1 right -columnAlign 2 left -rs 1 4;
    			text -label "アセット名 : ";

                rowLayout -nc 2 -adj 1;
                    textField
                        -text ""
                        uTf_ID_shr_createAssetFolders;

                    button -l "シーン名から取得" -h 18 -c "shr_createAssetFolders_getAssetIdFromSceneName";

    			    setParent ..;
    			setParent..;

            separator -st "in" -h 16 uSp_shr_createAssetFolders;

        frameLayout -l "フォルダ設定" -mw 4;
            rowColumnLayout -nc 3 -adj 3 uRcl_folder_shr_createAssetFolders;

                // フォルダ設定UI 作成
                shr_createAssetFolders_createFolderSettingsUI;

                setParent..;

            rowLayout -nc 2;
                text -l "" -w 220;
                button -l "追加フォルダ..." -c "shr_createAssetFolders_addFolder";

                setParent..;
            setParent..;
        separator -st "in" -h 16 ;

    rowColumnLayout -nc 2;
        radioCollection;

        text -l "" -w 16;
        radioButton
            -l "フォルダ作成のみ"
            -onCommand "optionVar -iv ov_shr_createAssetFolders_saveScene 0"
            uRb_createProjectOnly_shr_createAssetFolders;

        text -l "";
        radioButton
            -l "フォルダを作成 + 新規シーンをMaya フォルダに保存"
            -onCommand "optionVar -iv ov_shr_createAssetFolders_saveScene 2"
            uRb_saveNewScene_shr_createAssetFolders;

        text -l "";
        radioButton
            -l "フォルダを作成 + 現在のシーンをMaya フォルダに保存"
            -onCommand "optionVar -iv ov_shr_createAssetFolders_saveScene 1"
            uRb_saveCurrentScene_shr_createAssetFolders;


        if (`optionVar -q "ov_shr_createAssetFolders_saveScene"` == 1)
        {
            radioButton -e -sl uRb_saveCurrentScene_shr_createAssetFolders;
        }
        else if (`optionVar -q "ov_shr_createAssetFolders_saveScene"` == 2)
        {
            radioButton -e -sl uRb_saveNewScene_shr_createAssetFolders;
        }
        else
        {
            radioButton -e -sl uRb_createProjectOnly_shr_createAssetFolders;
        }

        setParent..;
    separator -st "in" -h 16 ;

    rowColumnLayout -nc 3 -adj 1;
        button -label "フォルダ作成" -bgc 0.5 0.6 0.5 -c "shr_createAssetFolders_create";

        separator -w 8 -st "none";

        // アセットフォルダをエクスプローラで開く
        symbolButton
                -image "fileOpen.png"
                -ann "アセットフォルダをエクスプローラで開く"
                -c "shr_createAssetFolders_openInExplorer"
                ;

    // シーン名からアセットID を取得
    shr_createAssetFolders_getAssetIdFromSceneName();

    showWindow;
}

/////////////////////////////////////////////////////////////////
// プリファレンス設定
/////////////////////////////////////////////////////////////////
global proc shr_createAssetFolders_setDefaultPreferences()
{
    if(`optionVar -ex "ov_shr_createAssetFolders_mesh"` == 0)
    {
        optionVar -iv "ov_shr_createAssetFolders_mesh" 1;
    }

    if(`optionVar -ex "ov_shr_createAssetFolders_saveScene"` == 0)
    {
        optionVar -iv "ov_shr_createAssetFolders_saveScene" 0;
    }

    // どのフォルダ設定を表示するか
    if(`optionVar -ex "ov_shr_createAssetFolders_visibleFolderSettings"` == 0)
    {
        optionVar -sva "ov_shr_createAssetFolders_visibleFolderSettings" "mesh";
        optionVar -sva "ov_shr_createAssetFolders_visibleFolderSettings" "texture";
        optionVar -sva "ov_shr_createAssetFolders_visibleFolderSettings" "fbx";
        optionVar -sva "ov_shr_createAssetFolders_visibleFolderSettings" "maya";
        optionVar -sva "ov_shr_createAssetFolders_visibleFolderSettings" "substancepainter";
        optionVar -sva "ov_shr_createAssetFolders_visibleFolderSettings" "zbrush";
    }

    // どのフォルダ設定にチェックを入れるか
    if(`optionVar -ex "ov_shr_createAssetFolders_checkedFolderSettings"` == 0)
    {
        optionVar -sva "ov_shr_createAssetFolders_checkedFolderSettings" "mesh";
        optionVar -sva "ov_shr_createAssetFolders_checkedFolderSettings" "texture";
        optionVar -sva "ov_shr_createAssetFolders_checkedFolderSettings" "fbx";
        optionVar -sva "ov_shr_createAssetFolders_checkedFolderSettings" "maya";
        optionVar -sva "ov_shr_createAssetFolders_checkedFolderSettings" "substancepainter";
        optionVar -sva "ov_shr_createAssetFolders_checkedFolderSettings" "zbrush";
    }
}

/////////////////////////////////////////////////////////////////
// csv ファイル読み込み
//
// $type
// 0: ラベルに使用する名前
// 1: 内部UI処理に使用する名前
// 2: フォルダに使用する名前
/////////////////////////////////////////////////////////////////
global proc string[] shr_createAssetFolders_readCsvFile(int $type)
{
    // csv パス
    string $csvPath = "C:/cygames/shrdev/shr/tools/in/ext/maya/2023/modules/shr/scripts/shr_createAssetFolders.csv";

    string $results[];

    if(`filetest -r $csvPath`)
    {
        // ファイルオープン
        int $fpid = `fopen $csvPath "r"`;

        // ヘッダ行 捨て読み
        fgetline $fpid;

        string $line;

        for( $line = `fgetline $fpid`; size($line) > 0; $line = `fgetline $fpid`)
        {
            // 改行コード削除
            $line = startString($line, `size($line)` - 1);

            // 各要素に分解
            string $elm[];
            tokenize $line "," $elm;

            $results[`size($results)`] = $elm[$type];
        }

        // ファイルクローズ
        fclose $fpid;
    }

    return $results;
}

/////////////////////////////////////////////////////////////////
// メニュー作成
/////////////////////////////////////////////////////////////////
global proc shr_createAssetFolders_createMenus()
{
    setParent uWnd_shr_createAssetFolders;

    // 表示メニュー
    menu -l "表示" -tearOff true;

        string $labels[] = shr_createAssetFolders_readCsvFile(0);
        string $names[] = shr_createAssetFolders_readCsvFile(1);

        string $visibleList[] = `optionVar -q ov_shr_createAssetFolders_visibleFolderSettings`;

        string $name;

        int $index;

        for($name in $names)
        {
            int $cbValue = stringArrayContains($name, $visibleList);

            string $menuItem = `menuItem -l $labels[$index] -cb $cbValue`;

            string $command = "shr_createAssetFolders_folderMenuCheckboxChangedCallback(\"" + $name + "\", \"" + $menuItem + "\")";

            menuItem -e -c $command $menuItem;

            $index += 1;
        }

    menu -l "ヘルプ" -helpMenu on;
        menuItem
            -l "Create Asset Folders のヘルプ"
            -c "showHelp -absolute \"https://wisdom.cygames.jp/pages/viewpage.action?pageId=530212425\""
            ;
}

/////////////////////////////////////////////////////////////////
// 各フォルダメニュー項目のチェックボックスを変更した時のコールバック
/////////////////////////////////////////////////////////////////
global proc shr_createAssetFolders_folderMenuCheckboxChangedCallback(string $name, string $menuItem)
{
    int $checked = `menuItem -q -cb $menuItem`;

    // 現在のプリファレンス値を取得
    string $values[] = `optionVar -q ov_shr_createAssetFolders_visibleFolderSettings`;

    if($checked)
    {
        stringArrayInsertAtIndex(0, $values, $name);

        $values = stringArrayRemoveDuplicates($values);
    }
    else
    {
        $values = stringArrayRemove({$name}, $values);
    }

    // プリファレンス値を一旦クリア
    optionVar -ca ov_shr_createAssetFolders_visibleFolderSettings;

    string $value;

    for($value in $values)
    {
        optionVar -sva "ov_shr_createAssetFolders_visibleFolderSettings" $value;
    }

    // フォルダ設定UI 再作成
    shr_createAssetFolders_createFolderSettingsUI;
}

/////////////////////////////////////////////////////////////////
// フォルダ設定UI 作成
/////////////////////////////////////////////////////////////////
global proc shr_createAssetFolders_createFolderSettingsUI()
{
    string $children[] = `rowColumnLayout -q -ca uRcl_folder_shr_createAssetFolders`;

    if(`size($children)` != 0)
    {
        deleteUI $children;
    }

    setParent uRcl_folder_shr_createAssetFolders;

    // csv ファイルから読み込み
    string $labels[] = shr_createAssetFolders_readCsvFile(0);
    string $names[] = shr_createAssetFolders_readCsvFile(1);
    string $folders[] =shr_createAssetFolders_readCsvFile(2);

    string $visibleList[] = `optionVar -q ov_shr_createAssetFolders_visibleFolderSettings`;
    string $checkedList[] = `optionVar -q ov_shr_createAssetFolders_checkedFolderSettings`;

    int $index;

    string $name;

    // フォルダ設定UI 作成
    for($name in $names)
    {
        int $isVisible = stringArrayContains($name, $visibleList);
        int $isChecked = stringArrayContains($name, $checkedList);

        if($isVisible)
        {
            text -l "";

            string $onCommand = "shr_createAssetFolders_folderCheckboxChangedCallback(\"" + $name + "\", 1)";
            string $offCommand = "shr_createAssetFolders_folderCheckboxChangedCallback(\"" + $name + "\", 0)";

            checkBox
                -l $labels[$index]
                -v $isChecked
                -onc $onCommand
                -ofc $offCommand
                ("uCb_" + $name + "_shr_createAssetFolders");

            textField
                -text $folders[$index]
                -editable off
                -en $isChecked
                ("uTf_" + $name + "_shr_createAssetFolders");

            // コピーボタン作成
            // shr_createAssetFolders_createCopyButton($name);
        }

        $index += 1;
    }
}

/////////////////////////////////////////////////////////////////
// フォルダチェックボックスを変更した時のコールバック
/////////////////////////////////////////////////////////////////
global proc shr_createAssetFolders_folderCheckboxChangedCallback(string $name, int $checked)
{
    // 対応するテキストフィールドを有効/無効
    textField -e -en $checked ("uTf_" + $name + "_shr_createAssetFolders");

    // 現在のプリファレンス値を取得
    string $values[] = `optionVar -q ov_shr_createAssetFolders_checkedFolderSettings`;

    if($checked)
    {
        stringArrayInsertAtIndex(0, $values, $name);

        $values = stringArrayRemoveDuplicates($values);
    }
    else
    {
        $values = stringArrayRemove({$name}, $values);
    }

    // プリファレンス値を一旦クリア
    optionVar -ca ov_shr_createAssetFolders_checkedFolderSettings;

    string $value;

    for($value in $values)
    {
        optionVar -sva "ov_shr_createAssetFolders_checkedFolderSettings" $value;
    }
}

/////////////////////////////////////////////////////////////////
// フォルダ追加
/////////////////////////////////////////////////////////////////
global proc shr_createAssetFolders_addFolder()
{
    string $childArray[] = `rowColumnLayout -q -childArray uRcl_folder_shr_createAssetFolders`;

    int $count;

    string $i;

    for ($i in $childArray)
    {
        $count = $count + `gmatch $i "uCb_shr_createAssetFolders_add_*"`;
    }

    string $chackBoxName = "uCb_shr_createAssetFolders_add_" + $count;
    string $textFieldName = "uTf_shr_createAssetFolders_add_" + $count;

    string $onCommand = "textField -e -en on " + $textFieldName;
    string $offCommand = "textField -e -en off " + $textFieldName;

    string $num = $count + 1;
    string $labelName = "追加 " + $num;

    text -l "" -p uRcl_folder_shr_createAssetFolders;
    checkBox
        -l $labelName
        -v on
        -onc $onCommand
        -ofc $offCommand
        -p uRcl_folder_shr_createAssetFolders
        $chackBoxName;
    textField
        -text ""
        -editable on
        -en on
        -p uRcl_folder_shr_createAssetFolders
        $textFieldName;

    text -l "" -p uRcl_folder_shr_createAssetFolders;
}

/////////////////////////////////////////////////////////////////
// フォルダ作成
/////////////////////////////////////////////////////////////////
global proc shr_createAssetFolders_create()
{
    string $assetName = `textField -q -text uTf_ID_shr_createAssetFolders`;

    if($assetName == "")
    {
        confirmDialog
            -t "確認"
            -icon "warning"
            -m "アセット名が入力されていません。"
            -b "確認";

        return;
    }

    // アセット名が有効な名前か
    int $isValidAssetName = shr_createAssetFolders_isValidAssetName($assetName);

    if($isValidAssetName == false)
    {
        confirmDialog
            -t "確認"
            -icon "warning"
            -m ("\"" + $assetName + "\"  は有効なアセット名ではありません。")
            -b "確認";

        return;
    }

    // アセットフォルダ
    string $assetFolderPath = shr_createAssetFolders_getAssetFolderPath($assetName);

    string $childArray[] = `rowColumnLayout -q -childArray uRcl_folder_shr_createAssetFolders`;

    string $folderCheckboxes[];
    string $additionalFolderCheckboxes[];

    string $i;

    // フォルダと追加フォルダのチェックボックスを取得
    for($i in $childArray)
    {
        if(`gmatch $i "uCb_*_shr_createAssetFolders"`)
        {
            $folderCheckboxes[`size($folderCheckboxes)`] = $i;
        }
        else if(`gmatch $i "uCb_shr_createAssetFolders_add_*"`)
        {
            $additionalFolderCheckboxes[`size($additionalFolderCheckboxes)`] = $i;
        }
    }

    // 全てのチェックボックス
    string $allCheckboxes[] = stringArrayCatenate($folderCheckboxes, $additionalFolderCheckboxes);

    // 追加フォルダのフォルダ名チェック
    for ($i in $additionalFolderCheckboxes)
    {
        if (`checkBox -q -v $i`)
        {
            string $additionalTextField = substituteAllString($i, "uCb", "uTf");

            if (`textField -q -text $additionalTextField` == "")
            {
                confirmDialog
                    -t "確認"
                    -icon "warning"
                    -m "追加フォルダのフォルダ名が入力されていません。"
                    -b "確認";
                return;
            }
        }
    }

    string $folderPathsToCreate[];
    string $folderPathsToSkip[];

    // 作成するフォルダとスキップするフォルダ
    for ($i in $allCheckboxes)
    {
        if (`checkBox -q -v $i`)
        {
            string $textField = substituteAllString($i, "uCb", "uTf");

            string $folderName = `textField -q -text $textField`;

            string $folderPath = $assetFolderPath + $folderName;

            if(`filetest -d $folderPath`)
            {
                $folderPathsToSkip[`size($folderPathsToSkip)`] = $folderPath;
            }
            else
            {
                $folderPathsToCreate[`size($folderPathsToCreate)`] = $folderPath;
            }
        }
    }

    string $tempArray[] = $folderPathsToCreate;
    string $folderPathsToCreateStr = stringArrayToString(stringArrayAddPrefix($tempArray, "    "), "\n");

    $tempArray = $folderPathsToSkip;
    string $folderPathsToSkipStr = stringArrayToString(stringArrayAddPrefix($tempArray, "    "), "\n");

    // 作成するフォルダがない場合
    if(`size($folderPathsToCreate)` == 0)
    {
        string $message = "指定したフォルダはすでに存在します。\n\n";
        $message += "■ 存在するフォルダ\n";
        $message += $folderPathsToSkipStr;

        confirmDialog
            -t "確認"
            -icon "information"
            -m $message -button "確認";

        return;
    }

    // 確認ダイアログの結果
    string $dialogResult;

    string $message = "以下のフォルダを作成します。\nよろしいですか？\n\n\n";
    $message += "■ 作成するフォルダ\n";
    $message += $folderPathsToCreateStr;
    $message += "\n\n";
    $message += "■ 存在するフォルダ（スキップ）\n";
    $message += $folderPathsToSkipStr;

    // 確認ダイアログ
    $dialogResult =
    `confirmDialog
        -t "確認"
        -icon "question"
        -m $message
        -b "作成"
        -b "キャンセル"
        -db "作成"
        -cb "キャンセル"
        -ds "キャンセル"`
        ;

    // キャンセルしたら終了
    if ($dialogResult == "キャンセル")
    {
        print "// キャンセルしました。\n";
        return;
    }

    // プロジェクトフォルダ作成
    workspace -create $assetFolderPath;

    // フォルダ作成
    for ($folderPath in $folderPathsToCreate)
    {
        // フォルダ作成
        sysFile -makeDir ($folderPath);

        // maya フォルダの場合、シーン保存の処理
        if(endsWith($folderPath, "maya"))
        {
            // シーン保存する場合
            if (`optionVar -q "ov_shr_createAssetFolders_saveScene"` != 0)
            {
                // シーンファイルパス
                string $filePath = $folderPath + "/" + $assetName + ".mb";

                int $doSave = true;

                if(`filetest -f $filePath`)
                {
                    // 確認ダイアログ
                    $dialogResult =
                    `confirmDialog
                        -t "確認"
                        -icon "question"
                        -m ("シーンファイルがすでに存在します。\n\n上書きしますか？\n\n" + $filePath)
                        -b "上書き"
                        -b "スキップ"
                        -db "上書き"
                        -cb "スキップ"
                        -ds "スキップ"`
                        ;

                    if ($dialogResult == "スキップ")
                    {
                        $doSave = false;
                    }
                }

                if($doSave)
                {
                    // 新規ファイル保存の場合
                    if(`radioButton -q -sl uRb_saveNewScene_shr_createAssetFolders`)
                    {
                        file -f -new;
                    }

                    file -rename $filePath;

                    file -f -save -type "mayaBinary" -options "v=0;";

                    print ("// Created " + `file -q -sceneName` + "\n");

                    // 最近使ったファイルに追加
                    addRecentFile(`file -q -sceneName`, "mayaBinary");
                }
                else
                {
                    print ("// Skipped " + $filePath + "\n");
                }
            }
        }
    }

    $message = "以下のフォルダを作成しました。\n\n";
    $message += "■ 作成したフォルダ\n";
    $message += $folderPathsToCreateStr;

    // 確認ダイアログ
    confirmDialog -t "確認" -icon "information" -m $message -b "確認";
}

/////////////////////////////////////////////////////////////////
// 有効なアセット名か
/////////////////////////////////////////////////////////////////
global proc int shr_createAssetFolders_isValidAssetName(string $assetName)
{
    string $staticMeshName = shr_exportFbx_getStaticMeshNames($assetName);

    python("import sys");
    python("import os");
    python("sys.path.append('C:/cygames/shrdev/shr/tools/in/ext/unrealengine/5.1/python')");
    python("from shr_ue_utils.asset import AssetNameUtils");
    python("asset_name_utils = AssetNameUtils('" + $staticMeshName + "')");

    int $isValidAssetName = python("asset_name_utils.is_valid_asset_name");

    return $isValidAssetName;
}

/////////////////////////////////////////////////////////////////
// アセットフォルダパスを取得
/////////////////////////////////////////////////////////////////
global proc string shr_createAssetFolders_getAssetFolderPath(string $assetName)
{
    string $staticMeshName = shr_exportFbx_getStaticMeshNames($assetName);

    python("import sys");
    python("import os");
    python("sys.path.append('C:/cygames/shrdev/shr/tools/in/ext/unrealengine/5.1/python')");
    python("from shr_ue_utils.asset import AssetNameUtils");
    python("asset_name_utils = AssetNameUtils('" + $staticMeshName + "')");

    // FBX フォルダバス
    string $assetFolderPath = python("asset_name_utils.asset_file_source_path");

    $assetFolderPath = `substitute "mesh/.+$" $assetFolderPath ""`;

    return $assetFolderPath;
}

////////////////////////////////////
// シーン名からAssetID を取得
///////////////////////////////////
global proc shr_createAssetFolders_getAssetIdFromSceneName()
{
    // シーン名を取得（拡張子なし）
    string $sceneName = basenameEx(`file -q -shortName -sceneName`);

    // シーン名が取得できなければ
    if($sceneName == "")
    {
        return;
    }
    else
    {
        textField -e -text $sceneName uTf_ID_shr_createAssetFolders;
    }
}

//===============================================
// アセットフォルダをエクスプローラで開く
//===============================================
global proc shr_createAssetFolders_openInExplorer()
{
    string $assetName = `textField -q -text uTf_ID_shr_createAssetFolders`;

    // アセット名が有効な名前か
    int $isValidAssetName = shr_createAssetFolders_isValidAssetName($assetName);

    if($isValidAssetName == false)
    {
        confirmDialog
            -t "確認"
            -icon "warning"
            -m ("\"" + $assetName + "\"  は有効なアセット名ではありません。")
            -b "確認";

        return;
    }

    string $folderPath = shr_createAssetFolders_getAssetFolderPath($assetName);

    if(`filetest -d $folderPath` == false)
    {
        confirmDialog -t "確認" -icon "information" -m "出力先フォルダが存在しません。" -b "確認";
    }
    else
    {
        system("explorer " + `substituteAllString $folderPath "/" "\\"`);
    }
}

// NOTE:
// shr_createAssetFolders;