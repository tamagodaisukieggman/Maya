//===============================================
//
// スケール参照用モデル インポートツール
//
//===============================================

global proc shr_scaleRefImportTool()
{
    //すでにウィンドウがあれば終了
    if (`window -exists uWnd_shr_scaleRefImportTool` == 1)
    {
        deleteUI uWnd_shr_scaleRefImportTool;
        //return;
    }

    // TA ツールログ送信
    shr_toolLog("Scale Reference Model Import Tool", "1.0.0", "launched.");

    window
        -title "Scale Reference Model Import Tool"
        -resizeToFitChildren on
        -sizeable off
        -maximizeButton off
        -toolbox on
        -menuBar on
        uWnd_shr_scaleRefImportTool;

        string $helpCmd = "showHelp -absolute \"https://wisdom.cygames.jp/pages/viewpage.action?pageId=434085357\"";

        menu -label "ヘルプ" -enable on;
            menuItem
                -label "Scale Reference Model Import Tool のヘルプ"
                -c $helpCmd
                -enable on
                ;

        frameLayout -lv off -mw 8 -mh 8;

        columnLayout -adj on -rowSpacing 2 uCl_shr_scaleRefImportTool;

        string $lines[] = `shr_scaleRefImportTool_readCsvFile`;

        string $line;

        string $elms[];
        string $elm;

        string $categories[];

        // カテゴリ抽出
        for($line in $lines)
        {
            tokenize $line "," $elms;

            if($elms[0] == 0)
            {
                continue;
            }

            $categories[`size($categories)`] = $elms[2];
        }

        $categories = stringArrayRemoveDuplicates($categories);

            optionMenu
                -l "カテゴリ :"
                -cc "shr_scaleRefImportTool_onCategoryChanged"
                -vis off
                uOm_shr_scaleRefImportTool;
            separator -vis off -st "in" -h 16;

                menuItem -l "全て";

        for($elm in $categories)
        {
            menuItem -l $elm;

            string $uRcl = "uRcl_shr_scaleRefImportTool_category_" + stringArrayFind($elm, 0, $categories);

            rowColumnLayout
                -p uCl_shr_scaleRefImportTool
                -nc 2
                -cw 1 75
                -cal 1 "right"
                -adj 2
                $uRcl;

                text -l ($elm + "  :  ");

            string $uCl = "uCl_shr_scaleRefImportTool_buttons_" + stringArrayFind($elm, 0, $categories);

                columnLayout -adj on -rowSpacing 2 $uCl;

        }

        for($line in $lines)
        {
            tokenize $line "," $elms;

            // 改行を削除
            $elms[3] = substituteAllString($elms[3], "\n", "");
            $elms[3] = substituteAllString($elms[3], "\\", "/");

            if($elms[0] == 0)
            {
                continue;
            }

            int $catIndex = stringArrayFind($elms[2], 0, $categories);

            string $cmd = "shr_scaleRefImportTool_onButtonPressed(\"" + $elms[3] + "\")";

            int $fbxFileExists = `filetest -f $elms[3]`;

            //
            button
                -p ("uCl_shr_scaleRefImportTool_buttons_" + $catIndex)
                -en $fbxFileExists
                -l $elms[1]
                -ann $elms[3]
                -c $cmd
                ;
        }

                setParent uCl_shr_scaleRefImportTool;
            separator -st "in" -h 16;

    int $isEnabled;
    string $material = "mtl_scale_ref";

    // mtl_scale_ref マテリアルがなければ
    if(`objExists $material`)
    {
        $isEnabled = true;
    }
    else
    {
        $isEnabled = 0;
        $material = "lambert1";
    }

    rowColumnLayout -nc 2 -cal 1 "right";
        text -l "マテリアルカラー : ";
        attrColorSliderGrp
            -at ($material + ".color")
            -en $isEnabled
            -l ""
            -cw 1 1
            -cw 2 50
            -cw 3 100
            -showButton off
            uAcsg_col_shr_scaleRefImportTool;

        text -l "マテリアル透明度 : ";
        attrColorSliderGrp
            -at ($material + ".transparency")
            -en $isEnabled
            -l ""
            -cw 1 1
            -cw 2 50
            -cw 3 100
            -showButton off
            uAcsg_tr_shr_scaleRefImportTool;

    showWindow;


}

////////////////////////////////////
// csv ファイル読み込み
///////////////////////////////////
global proc string[] shr_scaleRefImportTool_readCsvFile()
{
    string $filePath = "C:/cygames/shrdev/shr/tools/in/ext/maya/share/presets/scale_reference/scale_ref.csv";

    // 戻り値
    string $result[];

    if(`filetest -r $filePath` == false)
    {
        return $result;
    }

    string $line;

    int $fpid = `fopen $filePath "r"`;

    // ヘッダ行 捨て読み
    fgetline $fpid;

    for( $line = `fgetline $fpid`; size($line) > 0; $line = `fgetline $fpid`)
    {
    	stringArrayInsertAtIndex(`size($result)`, $result, $line);
    }

    fclose $fpid;

    return $result;
}

///////////////////////////////////////
// import ボタンコールバック
///////////////////////////////////////
global proc shr_scaleRefImportTool_onButtonPressed(string $fbxPath)
{
    // 現在の全てのルートノードを取得
    string $nodes[] = `ls "|*"`;

    // fbx 読み込みプリセットをロード
    FBXLoadImportPresetFile -f "C:/cygames/shrdev/shr/tools/in/ext/maya/2023/modules/shr/scripts/scaleRefModelImport.fbximportpreset";

    // fbx ファイルインポート
    file
        -import
        -type "FBX"
        -ignoreVersion
        // -renameAll true
        -removeDuplicateNetworks
        -mergeNamespacesOnClash false
        // -renamingPrefix $baseName
        // -pr
        $fbxPath
        ;

    // FBXImport -f $fbxPath -t 0;

    // インポート後の全てのルートノードを取得
    string $importNodes[] = `ls "|*"`;

    // インポートされたルートノードのみを取得
    $importNodes = stringArrayRemoveExact($nodes, $importNodes);

    if(`size($importNodes)` == 0)
    {
       return;
    }

    // scale_ref ノードがなければ作成
    if(`objExists "|scale_ref"` == false)
    {
        createNode "transform" -name "scale_ref";
    }

    // インポートされたノードをscale_ref の子に
    $importNodes = `parent $importNodes |scale_ref`;

    // インポートされたノードにアサインされているマテリアルを取得
    hyperShade -smn;
    string $selMat[] = `ls -sl`;

    // Scale Ref モデル用マテリアル名
    string $matName = "mtl_scale_ref";

    // mtl_scale_ref マテリアルがなければ作成
    if(`objExists $matName` == false)
    {
        string $newMat = `shadingNode -asShader "lambert"`;

        rename $newMat $matName;

        setAttr ($matName + ".transparency") -type double3 0.75 0.75 0.75;

        attrColorSliderGrp -e -at ($matName + ".color") -en true uAcsg_col_shr_scaleRefImportTool;
        attrColorSliderGrp -e -at ($matName + ".transparency") -en true uAcsg_tr_shr_scaleRefImportTool;

    }

    // インポートしたノードにアサイン
    select -r $importNodes;
    hyperShade -assign $matName;

    // インポートしたノードにアサインされていたマテリアルを削除
    delete $selMat;

}


///////////////////////////////////////
// カテゴリ変更コールバック
///////////////////////////////////////
global proc shr_scaleRefImportTool_onCategoryChanged()
{
    int $index = `optionMenu -q -sl uOm_shr_scaleRefImportTool` - 2;

    int $num = `optionMenu -q -numberOfItems uOm_shr_scaleRefImportTool` - 2;

    int $i;

    for($i=0; $i<=2; $i++)
    {
        string $uRcl = "uRcl_shr_scaleRefImportTool_category_" + $i;

        rowColumnLayout -e -vis ($i==$index || $index==-1) $uRcl;
    }

}


//shr_scaleRefImportTool;


