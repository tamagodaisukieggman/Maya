$infoTransformID = "INFO_NODE_ID";

$infoTransformList = `ls -l $infoTransformID`;
$infoTransform = $infoTransformList[0];

$targetP2dTextureID = `getAttr ($infoTransform + ".p2dId")`;

$startFrame = `getAttr ($infoTransform + ".startFrame")`;
$endFrame = `getAttr ($infoTransform + ".endFrame")`;

$imageWidth = `getAttr ($infoTransform + ".atlasWidth")`;
$imageHeight = `getAttr ($infoTransform + ".atlasHeight")`;
$imagePartWidth = `getAttr ($infoTransform + ".atlasPartWidth")`;
$imagePartHeight = `getAttr ($infoTransform + ".atlasPartHeight")`;

$partWidthValue = (float)$imagePartWidth / (float)$imageWidth;
$partHeightValue = (float)$imagePartHeight / (float)$imageHeight;

$maxValue = (float)$imageHeight / (float)$imagePartHeight;

$currentValue = $partWidthValue * (frame - $startFrame);

if($currentValue < 0 || $currentValue >= $maxValue)
{
    $currentValue = 0.0;
}

$uValue = $currentValue % 1.0;
$vValue = -$partHeightValue * (int)$currentValue;

$targetP2dTextureList = `ls -l $targetP2dTextureID`;
$targetP2dTextureListSize = `size($targetP2dTextureList)`;

for($p = 0; $p < $targetP2dTextureListSize; $p++)
{
    $targetP2dTexture = $targetP2dTextureList[$p];

    setAttr ($targetP2dTexture + ".offsetU") $uValue;
    setAttr ($targetP2dTexture + ".offsetV") $vValue;
}

