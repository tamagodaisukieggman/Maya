// ===========================================================================
// Copyright 2022 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================
//
// Given a texture node, make it into a layered texture node
//
// Last Updated: 07/18/2000
//					05/27/01 CPAM
//
global proc string
bgTurnTextureIntoLayeredTexture(string $txtNode)
{
	// Get output connection plugs for color and alpha
	string $colCon[] = `listConnections -d 1 -p 1 ($txtNode+".outColor")`;
	string $alphaCon[] = `listConnections -d 1 -p 1 ($txtNode+".outAlpha")`;

	// For each connection:
	// a) break connection
	// b) create a new layered texture node
	// c) connect texture up to new layered texture node
	// d) connect layered texture node to color dest plug
	//
	string $layeredTx;
	for ($cc in $colCon)
	{
		disconnectAttr ($txtNode+".outColor") $cc;
		$layeredTx = `shadingNode -asTexture layeredTexture`;
		connectAttr ($txtNode+".outColor") ($layeredTx+".inputs[0].color");
		connectAttr ($layeredTx+".outColor") $cc;
		setAttr ($layeredTx+".inputs[0].blendMode") 4;//change int if you want a different default blendMode
		return $layeredTx;

		print "\n";
		print $layeredTx;
		print "\n";
			
	}

	for ($ac in $alphaCon)
	{
		disconnectAttr ($txtNode+".outAlpha") $ac;
		$layeredTx = `shadingNode -asTexture layeredTexture`;
		connectAttr ($txtNode+".outAlpha") ($layeredTx+".inputs[0].alpha");
		connectAttr ($layeredTx+".outAlpha") $ac;
	}
}

