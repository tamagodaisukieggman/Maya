// ===========================================================================
// Copyright 2022 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================


global proc clothThicken(){

	//get the selection
	string $selection[] = `ls -sl`;
	//find the shape nodes that are meshes
	string $meshes[] = `listRelatives -shapes -type "mesh" $selection`;

	//test meshes to make sure they are connected to a cloth solver
	string $clothMeshes[];
	int $i = 0;
	for ($mesh in $meshes){
		string $connections[] = `listConnections -type "cpClothSolver" $mesh`;
		if (`size($connections)`>0){
			$clothMeshes[$i] = $mesh;
		}
		$i++;
	}

	//thicken cloth meshes
	for ($cloth in $clothMeshes){
		string $extrude[] = `polyExtrudeFacet -ch 1 -kft 1 -divisions 1 -ws 0 -ltx 0 -lty 0 -ltz -0.5 $cloth`;
		string $smooth[] = `polySmooth  -mth 1 -dpe 2 -ps 0.1 -ch 1 $cloth`;

		//add thickness attr to xform
		//add thickness on/off control
		addAttr -ln thickness 
			-at double $cloth;
		setAttr -e -keyable true ($cloth + ".thickness");
		setAttr ($cloth + ".thickness") 0.5;
		//addAttr -ln displayThickness -at bool $cloth;
		addAttr -ln thicknessState 
			-at "enum" 
			-en "Normal:HasNoEffect:Blocking:Waiting-Normal:Waiting-HasNoEffect:Waiting-Blocking:"
			$cloth;
		setAttr -e -keyable true ($cloth + ".thicknessState");

		connectAttr ($cloth + ".thickness") ($extrude[0] + ".localTranslateZ");
		connectAttr ($cloth + ".thicknessState") ($extrude[0] + ".nodeState");
		connectAttr ($cloth + ".thicknessState") ($smooth[0] + ".nodeState");


	}


}