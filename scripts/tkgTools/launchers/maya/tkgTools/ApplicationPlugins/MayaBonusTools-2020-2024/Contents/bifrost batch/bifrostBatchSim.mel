// ======================================================================
// Copyright (C) 2015 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information  proprietary to  Autodesk,  Inc.  ("Autodesk") and/or its
// licensors, which is protected by  U.S. and Canadian federal copyright
// law and by international treaties.
//
// The Data is  provided  for use exclusively by You. You have the right
// to use, modify, and incorporate  this  Data into  other  products for
// purposes  authorized  by  the  Autodesk  software  license agreement,
// without fee.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES  NOT MAKE  AND  HEREBY  DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING,  BUT  NOT LIMITED TO,  THE  WARRANTIES  OF  NON-INFRINGEMENT,
// MERCHANTABILITY  OR FITNESS FOR A PARTICULAR PURPOSE,  OR ARISING FROM A
// COURSE OF DEALING, USAGE,  OR TRADE PRACTICE.  IN NO EVENT WILL AUTODESK
// AND/OR ITS LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA,  OR PROFITS,
// OR SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK
// AND/OR ITS LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY  OR PROBABILITY
// OF SUCH DAMAGES.
// ======================================================================

// Script for caching Bifrost data in batch.
// See $MAYA_LOCATION/plug-ins/bifrost/scripts/doCreateBifrostCache.mel
// for full explanation of args.


global proc bifrostBatchSim( int $start, int $end, string $outdir ) {

    // Create simple expression to run bifrostMemUsage() on each timestep.
    expression -s "bifrostMemUsage()";

    // Select all containers.
    string $containers[] = `ls -type bifrostContainer`;
    if( !size( $containers ) )
        error( "No Bifrost containers found in this scene." );
    // end if

    // Report.
    for( $container in $containers )
        print( "// Found container \""+$container+"\".\n" );
    // end for

    // Select container(s).
    select -r $containers;

    // Run simulation.
    doCreateBifrostCache 3 { 
        "0",       // mode. 0 means use strict start and end frames provided.
        $start,    // start frame
        $end,      // end frame
        $outdir,   // name of cache directory
        "",        // Base name of cache files. If blank, use the container name as cache file.
        "bif",     // name of cache format
        "0",       // index of cache compression format
        "2"        // write mode
    };

} // end bifrostBatchSim
