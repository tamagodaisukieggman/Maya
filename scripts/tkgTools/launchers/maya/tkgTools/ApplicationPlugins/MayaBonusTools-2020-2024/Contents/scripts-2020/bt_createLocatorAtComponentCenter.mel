// Copyright (C) 1997-2020 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.
//

global proc bt_createLocatorAtComponentCenter()
{
	float $position[];
	string $currentLocator[];
	string $allLocators[];
	float $center[];
	int $c=0;

	string $components[] = `filterExpand -ex 1 -fp 1 -sm 31 -sm 32 -sm 34`;
	if (!size($components))	error "Select 1 or more verts, edges or faces";

	for ($comp in $components)
    	{
	    $center[0] = 0;
    	$center[1] = 0;
    	$center[2] = 0;
        select -r $comp;
	    ConvertSelectionToVertices;
        string $componentVerts[] = `filterExpand -sm 31`;
        int $size = `size $componentVerts`;
	
    	for ($i = 0; $i < $size; $i++)
    	    {
    		$vtx_pos = `pointPosition -world $componentVerts[$i]`;
    		$center[0] += $vtx_pos[0];
    		$center[1] += $vtx_pos[1];
    		$center[2] += $vtx_pos[2];
    	    }
        $center[0] /= $size;
    	$center[1] /= $size;
    	$center[2] /= $size;

		$currentLocator = `spaceLocator`;
		$allLocators[$c] = $currentLocator[0];
		move -a $center[0] $center[1] $center[2] $allLocators[$c];
		scale -a 0.1 0.1 0.1 $allLocators[$c];
		$c++;
    	}
    print ("Created " + $c + " locators\n");
	group -n "componentLocatorGroup" $allLocators;
}