// Copyright (C) 1997-2020 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.
//
// Author:		Steven T. L. Roselle
//
// Creation Date:      ( 04/01/14 )
// Last Update:        ( 04/01/14 )

global proc float bt_vertDistanceCalc()
{


 float $VertDistance = 0.0;

 string $vertices[];
 float $v1[3];
 float $v2[3];
 float $edgeFloat[];
 vector $edgeVector;
 $vertices = `filterExpand -sm 31`;
 
 if (`size $vertices` == 2)
 	{
		$v1 = `pointPosition $vertices[0]`;
    	$v2 = `pointPosition $vertices[1]`;
    
	    for ( $i = 0; $i < 3; $i++ ){
		$edgeFloat[$i] = $v1[$i] - $v2[$i];
	    }
    	$edgeVector = $edgeFloat;
    
    	$VertDistance = `mag $edgeVector`;
        print ("Distance between vertices = " + $VertDistance + "\n");
 	}
 
 return $VertDistance;
}


proc bt_createVertDistanceHUD (){

	headsUpDisplay
		-section          0
		//-block            8
		-b `headsUpDisplay -nfb  0`
		-blockSize        "small"
		-label            "Vert Distance:"
		-labelFontSize    "small"
		-dataFontSize	  "small"
		-command          "bt_vertDistanceCalc"
		-event            "SelectionChanged"
		-nodeChanges      "attributeChange"
		-dp		4
	HUDVertDistance;
}


global proc bt_toggleVertDistanceHUD (){

    if (`headsUpDisplay -ex HUDVertDistance`)
	headsUpDisplay -rem HUDVertDistance;
    else 
        bt_createVertDistanceHUD;
     	
}
