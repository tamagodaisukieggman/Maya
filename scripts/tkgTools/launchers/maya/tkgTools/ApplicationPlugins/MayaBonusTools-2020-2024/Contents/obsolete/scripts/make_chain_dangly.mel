// ===========================================================================
// Copyright 2022 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================

/*make the joint chain dangly.mel
start with bones parented into hierarchy
bonesOnCurve might be useful from bonus tools
makeCurvesDynamicHairs
Make dynamic curve first and use it for spline.
The dynamic hair from the spline ik is in the wrong order.*/
global proc make_chain_dangly(){
	/*user selects top and bottom of chain*/
	string $joints[] = `ls -sl`;
	string $splin[] = `ikHandle -sol ikSplineSolver`; //create spline ik for curve only
	select -cl ;
	select -r $splin[0] $splin[1]; //delete handle and effector.
	delete;
	select -r $splin[2]; //selects old spline ik curve
	makeCurvesDynamicHairs 0 0; //make curve dynamic creates new curve, get name:
	pickWalk -d down; //for hair system shape
	string $hsys[] = `ls -sl`; //hair system name, to find follicle
	string $foltrans[] = `listConnections -type follicle $hsys[0]`;
	select -cl;
	select -r $foltrans[0];
	pickWalk -d down;
	string $fol[] = `ls -sl`; //odd that connection above is to transform, not shape.
	setAttr ($fol[0]+ ".pointLock") 1; //lock base end of curve.
	setAttr ($hsys[0]+".gravity") 50;
	string $dyncurv[] = `listConnections -s off -d on $fol[0]`; //to get output curve shape
	//assign dynamic curve as spline ik. Could also assign as wire as a variation.
	ikHandle -sol ikSplineSolver -ccv false -snc true -startJoint $joints[0] -endEffector $joints[1] -pcv on -curve $dyncurv[1];
	parent -w $dyncurv[1]; //unparents original curve to avoid double transform.
	
	//create attributes on hair that go to stiffness and gravity on hair system.
	addAttr -ln stiffness -at double  -min -0 -max 1 -dv 0.15 $dyncurv[1];
	addAttr -ln gravity -at double -min -10 -max 100 -dv 50 $dyncurv[1];
	addAttr -ln damp -at double -min 0 -max 1 -dv 0 $dyncurv[1];
	addAttr -ln friction -at double -min 0 -max 1 -dv 0 $dyncurv[1];
	addAttr -ln weight -at double -min 0 -max 100 -dv 1 $dyncurv[1];
	setAttr -e -keyable true ($dyncurv[1] + ".stiffness");
	setAttr -e -keyable true ($dyncurv[1] + ".gravity");
	setAttr -e -keyable true ($dyncurv[1] + ".damp");
	setAttr -e -keyable true ($dyncurv[1] + ".friction");
	setAttr -e -keyable true ($dyncurv[1] + ".weight");
	
	//connect attrs to hair system
	connectAttr -f ($dyncurv[1] + ".stiffness") ($hsys[0]+".stiffness");
	connectAttr -f ($dyncurv[1] + ".gravity") ($hsys[0]+".gravity");
	connectAttr -f ($dyncurv[1] + ".damp") ($hsys[0]+".damp");
	connectAttr -f ($dyncurv[1] + ".friction") ($hsys[0]+".friction");
	connectAttr -f ($dyncurv[1] + ".weight") ($hsys[0]+".dynamicsWeight");
	
	//really should hide the hair system and original curve. Leave handle for spline ik controls.
	setAttr ($hsys[0]+ ".visibility") 0;
	setAttr ($splin[2]+ ".visibility") 0;
}
